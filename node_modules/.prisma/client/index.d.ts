
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model categorias
 * 
 */
export type categorias = $Result.DefaultSelection<Prisma.$categoriasPayload>
/**
 * Model cursos
 * 
 */
export type cursos = $Result.DefaultSelection<Prisma.$cursosPayload>
/**
 * Model inscripciones
 * 
 */
export type inscripciones = $Result.DefaultSelection<Prisma.$inscripcionesPayload>
/**
 * Model instructores
 * 
 */
export type instructores = $Result.DefaultSelection<Prisma.$instructoresPayload>
/**
 * Model modulos
 * 
 */
export type modulos = $Result.DefaultSelection<Prisma.$modulosPayload>
/**
 * Model usuarios
 * 
 */
export type usuarios = $Result.DefaultSelection<Prisma.$usuariosPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Categorias
 * const categorias = await prisma.categorias.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Categorias
   * const categorias = await prisma.categorias.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.categorias`: Exposes CRUD operations for the **categorias** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categorias
    * const categorias = await prisma.categorias.findMany()
    * ```
    */
  get categorias(): Prisma.categoriasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cursos`: Exposes CRUD operations for the **cursos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cursos
    * const cursos = await prisma.cursos.findMany()
    * ```
    */
  get cursos(): Prisma.cursosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inscripciones`: Exposes CRUD operations for the **inscripciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inscripciones
    * const inscripciones = await prisma.inscripciones.findMany()
    * ```
    */
  get inscripciones(): Prisma.inscripcionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.instructores`: Exposes CRUD operations for the **instructores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Instructores
    * const instructores = await prisma.instructores.findMany()
    * ```
    */
  get instructores(): Prisma.instructoresDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.modulos`: Exposes CRUD operations for the **modulos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Modulos
    * const modulos = await prisma.modulos.findMany()
    * ```
    */
  get modulos(): Prisma.modulosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuarios`: Exposes CRUD operations for the **usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuarios.findMany()
    * ```
    */
  get usuarios(): Prisma.usuariosDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.10.1
   * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    categorias: 'categorias',
    cursos: 'cursos',
    inscripciones: 'inscripciones',
    instructores: 'instructores',
    modulos: 'modulos',
    usuarios: 'usuarios'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "categorias" | "cursos" | "inscripciones" | "instructores" | "modulos" | "usuarios"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      categorias: {
        payload: Prisma.$categoriasPayload<ExtArgs>
        fields: Prisma.categoriasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.categoriasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.categoriasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          findFirst: {
            args: Prisma.categoriasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.categoriasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          findMany: {
            args: Prisma.categoriasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>[]
          }
          create: {
            args: Prisma.categoriasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          createMany: {
            args: Prisma.categoriasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.categoriasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>[]
          }
          delete: {
            args: Prisma.categoriasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          update: {
            args: Prisma.categoriasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          deleteMany: {
            args: Prisma.categoriasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.categoriasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.categoriasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>[]
          }
          upsert: {
            args: Prisma.categoriasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          aggregate: {
            args: Prisma.CategoriasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategorias>
          }
          groupBy: {
            args: Prisma.categoriasGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriasGroupByOutputType>[]
          }
          count: {
            args: Prisma.categoriasCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriasCountAggregateOutputType> | number
          }
        }
      }
      cursos: {
        payload: Prisma.$cursosPayload<ExtArgs>
        fields: Prisma.cursosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cursosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cursosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cursosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cursosPayload>
          }
          findFirst: {
            args: Prisma.cursosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cursosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cursosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cursosPayload>
          }
          findMany: {
            args: Prisma.cursosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cursosPayload>[]
          }
          create: {
            args: Prisma.cursosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cursosPayload>
          }
          createMany: {
            args: Prisma.cursosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cursosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cursosPayload>[]
          }
          delete: {
            args: Prisma.cursosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cursosPayload>
          }
          update: {
            args: Prisma.cursosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cursosPayload>
          }
          deleteMany: {
            args: Prisma.cursosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cursosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cursosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cursosPayload>[]
          }
          upsert: {
            args: Prisma.cursosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cursosPayload>
          }
          aggregate: {
            args: Prisma.CursosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCursos>
          }
          groupBy: {
            args: Prisma.cursosGroupByArgs<ExtArgs>
            result: $Utils.Optional<CursosGroupByOutputType>[]
          }
          count: {
            args: Prisma.cursosCountArgs<ExtArgs>
            result: $Utils.Optional<CursosCountAggregateOutputType> | number
          }
        }
      }
      inscripciones: {
        payload: Prisma.$inscripcionesPayload<ExtArgs>
        fields: Prisma.inscripcionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.inscripcionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscripcionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.inscripcionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscripcionesPayload>
          }
          findFirst: {
            args: Prisma.inscripcionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscripcionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.inscripcionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscripcionesPayload>
          }
          findMany: {
            args: Prisma.inscripcionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscripcionesPayload>[]
          }
          create: {
            args: Prisma.inscripcionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscripcionesPayload>
          }
          createMany: {
            args: Prisma.inscripcionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.inscripcionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscripcionesPayload>[]
          }
          delete: {
            args: Prisma.inscripcionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscripcionesPayload>
          }
          update: {
            args: Prisma.inscripcionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscripcionesPayload>
          }
          deleteMany: {
            args: Prisma.inscripcionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.inscripcionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.inscripcionesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscripcionesPayload>[]
          }
          upsert: {
            args: Prisma.inscripcionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscripcionesPayload>
          }
          aggregate: {
            args: Prisma.InscripcionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInscripciones>
          }
          groupBy: {
            args: Prisma.inscripcionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<InscripcionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.inscripcionesCountArgs<ExtArgs>
            result: $Utils.Optional<InscripcionesCountAggregateOutputType> | number
          }
        }
      }
      instructores: {
        payload: Prisma.$instructoresPayload<ExtArgs>
        fields: Prisma.instructoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.instructoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instructoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.instructoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instructoresPayload>
          }
          findFirst: {
            args: Prisma.instructoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instructoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.instructoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instructoresPayload>
          }
          findMany: {
            args: Prisma.instructoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instructoresPayload>[]
          }
          create: {
            args: Prisma.instructoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instructoresPayload>
          }
          createMany: {
            args: Prisma.instructoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.instructoresCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instructoresPayload>[]
          }
          delete: {
            args: Prisma.instructoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instructoresPayload>
          }
          update: {
            args: Prisma.instructoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instructoresPayload>
          }
          deleteMany: {
            args: Prisma.instructoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.instructoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.instructoresUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instructoresPayload>[]
          }
          upsert: {
            args: Prisma.instructoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instructoresPayload>
          }
          aggregate: {
            args: Prisma.InstructoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInstructores>
          }
          groupBy: {
            args: Prisma.instructoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<InstructoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.instructoresCountArgs<ExtArgs>
            result: $Utils.Optional<InstructoresCountAggregateOutputType> | number
          }
        }
      }
      modulos: {
        payload: Prisma.$modulosPayload<ExtArgs>
        fields: Prisma.modulosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.modulosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.modulosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulosPayload>
          }
          findFirst: {
            args: Prisma.modulosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.modulosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulosPayload>
          }
          findMany: {
            args: Prisma.modulosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulosPayload>[]
          }
          create: {
            args: Prisma.modulosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulosPayload>
          }
          createMany: {
            args: Prisma.modulosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.modulosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulosPayload>[]
          }
          delete: {
            args: Prisma.modulosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulosPayload>
          }
          update: {
            args: Prisma.modulosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulosPayload>
          }
          deleteMany: {
            args: Prisma.modulosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.modulosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.modulosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulosPayload>[]
          }
          upsert: {
            args: Prisma.modulosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulosPayload>
          }
          aggregate: {
            args: Prisma.ModulosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModulos>
          }
          groupBy: {
            args: Prisma.modulosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModulosGroupByOutputType>[]
          }
          count: {
            args: Prisma.modulosCountArgs<ExtArgs>
            result: $Utils.Optional<ModulosCountAggregateOutputType> | number
          }
        }
      }
      usuarios: {
        payload: Prisma.$usuariosPayload<ExtArgs>
        fields: Prisma.usuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findFirst: {
            args: Prisma.usuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findMany: {
            args: Prisma.usuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          create: {
            args: Prisma.usuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          createMany: {
            args: Prisma.usuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usuariosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          delete: {
            args: Prisma.usuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          update: {
            args: Prisma.usuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          deleteMany: {
            args: Prisma.usuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usuariosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          upsert: {
            args: Prisma.usuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          aggregate: {
            args: Prisma.UsuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarios>
          }
          groupBy: {
            args: Prisma.usuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuariosCountArgs<ExtArgs>
            result: $Utils.Optional<UsuariosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    categorias?: categoriasOmit
    cursos?: cursosOmit
    inscripciones?: inscripcionesOmit
    instructores?: instructoresOmit
    modulos?: modulosOmit
    usuarios?: usuariosOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CategoriasCountOutputType
   */

  export type CategoriasCountOutputType = {
    cursos: number
  }

  export type CategoriasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | CategoriasCountOutputTypeCountCursosArgs
  }

  // Custom InputTypes
  /**
   * CategoriasCountOutputType without action
   */
  export type CategoriasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriasCountOutputType
     */
    select?: CategoriasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriasCountOutputType without action
   */
  export type CategoriasCountOutputTypeCountCursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cursosWhereInput
  }


  /**
   * Count Type CursosCountOutputType
   */

  export type CursosCountOutputType = {
    inscripciones: number
    modulos: number
  }

  export type CursosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inscripciones?: boolean | CursosCountOutputTypeCountInscripcionesArgs
    modulos?: boolean | CursosCountOutputTypeCountModulosArgs
  }

  // Custom InputTypes
  /**
   * CursosCountOutputType without action
   */
  export type CursosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursosCountOutputType
     */
    select?: CursosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CursosCountOutputType without action
   */
  export type CursosCountOutputTypeCountInscripcionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: inscripcionesWhereInput
  }

  /**
   * CursosCountOutputType without action
   */
  export type CursosCountOutputTypeCountModulosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: modulosWhereInput
  }


  /**
   * Count Type InstructoresCountOutputType
   */

  export type InstructoresCountOutputType = {
    cursos: number
  }

  export type InstructoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | InstructoresCountOutputTypeCountCursosArgs
  }

  // Custom InputTypes
  /**
   * InstructoresCountOutputType without action
   */
  export type InstructoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstructoresCountOutputType
     */
    select?: InstructoresCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InstructoresCountOutputType without action
   */
  export type InstructoresCountOutputTypeCountCursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cursosWhereInput
  }


  /**
   * Count Type UsuariosCountOutputType
   */

  export type UsuariosCountOutputType = {
    inscripciones: number
    instructores: number
  }

  export type UsuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inscripciones?: boolean | UsuariosCountOutputTypeCountInscripcionesArgs
    instructores?: boolean | UsuariosCountOutputTypeCountInstructoresArgs
  }

  // Custom InputTypes
  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuariosCountOutputType
     */
    select?: UsuariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountInscripcionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: inscripcionesWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountInstructoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: instructoresWhereInput
  }


  /**
   * Models
   */

  /**
   * Model categorias
   */

  export type AggregateCategorias = {
    _count: CategoriasCountAggregateOutputType | null
    _avg: CategoriasAvgAggregateOutputType | null
    _sum: CategoriasSumAggregateOutputType | null
    _min: CategoriasMinAggregateOutputType | null
    _max: CategoriasMaxAggregateOutputType | null
  }

  export type CategoriasAvgAggregateOutputType = {
    id: number | null
  }

  export type CategoriasSumAggregateOutputType = {
    id: number | null
  }

  export type CategoriasMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type CategoriasMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type CategoriasCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    estado_auditoria: number
    fecha_creacion: number
    fecha_actualizacion: number
    _all: number
  }


  export type CategoriasAvgAggregateInputType = {
    id?: true
  }

  export type CategoriasSumAggregateInputType = {
    id?: true
  }

  export type CategoriasMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type CategoriasMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type CategoriasCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
    _all?: true
  }

  export type CategoriasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categorias to aggregate.
     */
    where?: categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriasOrderByWithRelationInput | categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categorias
    **/
    _count?: true | CategoriasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriasMaxAggregateInputType
  }

  export type GetCategoriasAggregateType<T extends CategoriasAggregateArgs> = {
        [P in keyof T & keyof AggregateCategorias]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategorias[P]>
      : GetScalarType<T[P], AggregateCategorias[P]>
  }




  export type categoriasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoriasWhereInput
    orderBy?: categoriasOrderByWithAggregationInput | categoriasOrderByWithAggregationInput[]
    by: CategoriasScalarFieldEnum[] | CategoriasScalarFieldEnum
    having?: categoriasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriasCountAggregateInputType | true
    _avg?: CategoriasAvgAggregateInputType
    _sum?: CategoriasSumAggregateInputType
    _min?: CategoriasMinAggregateInputType
    _max?: CategoriasMaxAggregateInputType
  }

  export type CategoriasGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
    _count: CategoriasCountAggregateOutputType | null
    _avg: CategoriasAvgAggregateOutputType | null
    _sum: CategoriasSumAggregateOutputType | null
    _min: CategoriasMinAggregateOutputType | null
    _max: CategoriasMaxAggregateOutputType | null
  }

  type GetCategoriasGroupByPayload<T extends categoriasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriasGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriasGroupByOutputType[P]>
        }
      >
    >


  export type categoriasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    cursos?: boolean | categorias$cursosArgs<ExtArgs>
    _count?: boolean | CategoriasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categorias"]>

  export type categoriasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
  }, ExtArgs["result"]["categorias"]>

  export type categoriasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
  }, ExtArgs["result"]["categorias"]>

  export type categoriasSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
  }

  export type categoriasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion" | "estado_auditoria" | "fecha_creacion" | "fecha_actualizacion", ExtArgs["result"]["categorias"]>
  export type categoriasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | categorias$cursosArgs<ExtArgs>
    _count?: boolean | CategoriasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type categoriasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type categoriasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $categoriasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "categorias"
    objects: {
      cursos: Prisma.$cursosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
      estado_auditoria: string | null
      fecha_creacion: Date | null
      fecha_actualizacion: Date | null
    }, ExtArgs["result"]["categorias"]>
    composites: {}
  }

  type categoriasGetPayload<S extends boolean | null | undefined | categoriasDefaultArgs> = $Result.GetResult<Prisma.$categoriasPayload, S>

  type categoriasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<categoriasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriasCountAggregateInputType | true
    }

  export interface categoriasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['categorias'], meta: { name: 'categorias' } }
    /**
     * Find zero or one Categorias that matches the filter.
     * @param {categoriasFindUniqueArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends categoriasFindUniqueArgs>(args: SelectSubset<T, categoriasFindUniqueArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categorias that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {categoriasFindUniqueOrThrowArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends categoriasFindUniqueOrThrowArgs>(args: SelectSubset<T, categoriasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasFindFirstArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends categoriasFindFirstArgs>(args?: SelectSubset<T, categoriasFindFirstArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categorias that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasFindFirstOrThrowArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends categoriasFindFirstOrThrowArgs>(args?: SelectSubset<T, categoriasFindFirstOrThrowArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categorias
     * const categorias = await prisma.categorias.findMany()
     * 
     * // Get first 10 Categorias
     * const categorias = await prisma.categorias.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriasWithIdOnly = await prisma.categorias.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends categoriasFindManyArgs>(args?: SelectSubset<T, categoriasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categorias.
     * @param {categoriasCreateArgs} args - Arguments to create a Categorias.
     * @example
     * // Create one Categorias
     * const Categorias = await prisma.categorias.create({
     *   data: {
     *     // ... data to create a Categorias
     *   }
     * })
     * 
     */
    create<T extends categoriasCreateArgs>(args: SelectSubset<T, categoriasCreateArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categorias.
     * @param {categoriasCreateManyArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categorias = await prisma.categorias.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends categoriasCreateManyArgs>(args?: SelectSubset<T, categoriasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categorias and returns the data saved in the database.
     * @param {categoriasCreateManyAndReturnArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categorias = await prisma.categorias.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categorias and only return the `id`
     * const categoriasWithIdOnly = await prisma.categorias.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends categoriasCreateManyAndReturnArgs>(args?: SelectSubset<T, categoriasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Categorias.
     * @param {categoriasDeleteArgs} args - Arguments to delete one Categorias.
     * @example
     * // Delete one Categorias
     * const Categorias = await prisma.categorias.delete({
     *   where: {
     *     // ... filter to delete one Categorias
     *   }
     * })
     * 
     */
    delete<T extends categoriasDeleteArgs>(args: SelectSubset<T, categoriasDeleteArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categorias.
     * @param {categoriasUpdateArgs} args - Arguments to update one Categorias.
     * @example
     * // Update one Categorias
     * const categorias = await prisma.categorias.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends categoriasUpdateArgs>(args: SelectSubset<T, categoriasUpdateArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categorias.
     * @param {categoriasDeleteManyArgs} args - Arguments to filter Categorias to delete.
     * @example
     * // Delete a few Categorias
     * const { count } = await prisma.categorias.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends categoriasDeleteManyArgs>(args?: SelectSubset<T, categoriasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categorias
     * const categorias = await prisma.categorias.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends categoriasUpdateManyArgs>(args: SelectSubset<T, categoriasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias and returns the data updated in the database.
     * @param {categoriasUpdateManyAndReturnArgs} args - Arguments to update many Categorias.
     * @example
     * // Update many Categorias
     * const categorias = await prisma.categorias.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categorias and only return the `id`
     * const categoriasWithIdOnly = await prisma.categorias.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends categoriasUpdateManyAndReturnArgs>(args: SelectSubset<T, categoriasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Categorias.
     * @param {categoriasUpsertArgs} args - Arguments to update or create a Categorias.
     * @example
     * // Update or create a Categorias
     * const categorias = await prisma.categorias.upsert({
     *   create: {
     *     // ... data to create a Categorias
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categorias we want to update
     *   }
     * })
     */
    upsert<T extends categoriasUpsertArgs>(args: SelectSubset<T, categoriasUpsertArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasCountArgs} args - Arguments to filter Categorias to count.
     * @example
     * // Count the number of Categorias
     * const count = await prisma.categorias.count({
     *   where: {
     *     // ... the filter for the Categorias we want to count
     *   }
     * })
    **/
    count<T extends categoriasCountArgs>(
      args?: Subset<T, categoriasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriasAggregateArgs>(args: Subset<T, CategoriasAggregateArgs>): Prisma.PrismaPromise<GetCategoriasAggregateType<T>>

    /**
     * Group by Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends categoriasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: categoriasGroupByArgs['orderBy'] }
        : { orderBy?: categoriasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, categoriasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the categorias model
   */
  readonly fields: categoriasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for categorias.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__categoriasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cursos<T extends categorias$cursosArgs<ExtArgs> = {}>(args?: Subset<T, categorias$cursosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the categorias model
   */
  interface categoriasFieldRefs {
    readonly id: FieldRef<"categorias", 'Int'>
    readonly nombre: FieldRef<"categorias", 'String'>
    readonly descripcion: FieldRef<"categorias", 'String'>
    readonly estado_auditoria: FieldRef<"categorias", 'String'>
    readonly fecha_creacion: FieldRef<"categorias", 'DateTime'>
    readonly fecha_actualizacion: FieldRef<"categorias", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * categorias findUnique
   */
  export type categoriasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriasInclude<ExtArgs> | null
    /**
     * Filter, which categorias to fetch.
     */
    where: categoriasWhereUniqueInput
  }

  /**
   * categorias findUniqueOrThrow
   */
  export type categoriasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriasInclude<ExtArgs> | null
    /**
     * Filter, which categorias to fetch.
     */
    where: categoriasWhereUniqueInput
  }

  /**
   * categorias findFirst
   */
  export type categoriasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriasInclude<ExtArgs> | null
    /**
     * Filter, which categorias to fetch.
     */
    where?: categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriasOrderByWithRelationInput | categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categorias.
     */
    cursor?: categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categorias.
     */
    distinct?: CategoriasScalarFieldEnum | CategoriasScalarFieldEnum[]
  }

  /**
   * categorias findFirstOrThrow
   */
  export type categoriasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriasInclude<ExtArgs> | null
    /**
     * Filter, which categorias to fetch.
     */
    where?: categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriasOrderByWithRelationInput | categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categorias.
     */
    cursor?: categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categorias.
     */
    distinct?: CategoriasScalarFieldEnum | CategoriasScalarFieldEnum[]
  }

  /**
   * categorias findMany
   */
  export type categoriasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriasInclude<ExtArgs> | null
    /**
     * Filter, which categorias to fetch.
     */
    where?: categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriasOrderByWithRelationInput | categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categorias.
     */
    cursor?: categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    distinct?: CategoriasScalarFieldEnum | CategoriasScalarFieldEnum[]
  }

  /**
   * categorias create
   */
  export type categoriasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriasInclude<ExtArgs> | null
    /**
     * The data needed to create a categorias.
     */
    data: XOR<categoriasCreateInput, categoriasUncheckedCreateInput>
  }

  /**
   * categorias createMany
   */
  export type categoriasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many categorias.
     */
    data: categoriasCreateManyInput | categoriasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * categorias createManyAndReturn
   */
  export type categoriasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * The data used to create many categorias.
     */
    data: categoriasCreateManyInput | categoriasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * categorias update
   */
  export type categoriasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriasInclude<ExtArgs> | null
    /**
     * The data needed to update a categorias.
     */
    data: XOR<categoriasUpdateInput, categoriasUncheckedUpdateInput>
    /**
     * Choose, which categorias to update.
     */
    where: categoriasWhereUniqueInput
  }

  /**
   * categorias updateMany
   */
  export type categoriasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update categorias.
     */
    data: XOR<categoriasUpdateManyMutationInput, categoriasUncheckedUpdateManyInput>
    /**
     * Filter which categorias to update
     */
    where?: categoriasWhereInput
    /**
     * Limit how many categorias to update.
     */
    limit?: number
  }

  /**
   * categorias updateManyAndReturn
   */
  export type categoriasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * The data used to update categorias.
     */
    data: XOR<categoriasUpdateManyMutationInput, categoriasUncheckedUpdateManyInput>
    /**
     * Filter which categorias to update
     */
    where?: categoriasWhereInput
    /**
     * Limit how many categorias to update.
     */
    limit?: number
  }

  /**
   * categorias upsert
   */
  export type categoriasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriasInclude<ExtArgs> | null
    /**
     * The filter to search for the categorias to update in case it exists.
     */
    where: categoriasWhereUniqueInput
    /**
     * In case the categorias found by the `where` argument doesn't exist, create a new categorias with this data.
     */
    create: XOR<categoriasCreateInput, categoriasUncheckedCreateInput>
    /**
     * In case the categorias was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoriasUpdateInput, categoriasUncheckedUpdateInput>
  }

  /**
   * categorias delete
   */
  export type categoriasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriasInclude<ExtArgs> | null
    /**
     * Filter which categorias to delete.
     */
    where: categoriasWhereUniqueInput
  }

  /**
   * categorias deleteMany
   */
  export type categoriasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categorias to delete
     */
    where?: categoriasWhereInput
    /**
     * Limit how many categorias to delete.
     */
    limit?: number
  }

  /**
   * categorias.cursos
   */
  export type categorias$cursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    where?: cursosWhereInput
    orderBy?: cursosOrderByWithRelationInput | cursosOrderByWithRelationInput[]
    cursor?: cursosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CursosScalarFieldEnum | CursosScalarFieldEnum[]
  }

  /**
   * categorias without action
   */
  export type categoriasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriasInclude<ExtArgs> | null
  }


  /**
   * Model cursos
   */

  export type AggregateCursos = {
    _count: CursosCountAggregateOutputType | null
    _avg: CursosAvgAggregateOutputType | null
    _sum: CursosSumAggregateOutputType | null
    _min: CursosMinAggregateOutputType | null
    _max: CursosMaxAggregateOutputType | null
  }

  export type CursosAvgAggregateOutputType = {
    id: number | null
    precio: Decimal | null
    categoria_id: number | null
    instructor_id: number | null
    duracion_horas: number | null
  }

  export type CursosSumAggregateOutputType = {
    id: number | null
    precio: Decimal | null
    categoria_id: number | null
    instructor_id: number | null
    duracion_horas: number | null
  }

  export type CursosMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    descripcion: string | null
    precio: Decimal | null
    categoria_id: number | null
    instructor_id: number | null
    duracion_horas: number | null
    nivel: string | null
    fecha_creacion: Date | null
    activo: boolean | null
    estado_auditoria: string | null
    fecha_actualizacion: Date | null
  }

  export type CursosMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    descripcion: string | null
    precio: Decimal | null
    categoria_id: number | null
    instructor_id: number | null
    duracion_horas: number | null
    nivel: string | null
    fecha_creacion: Date | null
    activo: boolean | null
    estado_auditoria: string | null
    fecha_actualizacion: Date | null
  }

  export type CursosCountAggregateOutputType = {
    id: number
    titulo: number
    descripcion: number
    precio: number
    categoria_id: number
    instructor_id: number
    duracion_horas: number
    nivel: number
    fecha_creacion: number
    activo: number
    estado_auditoria: number
    fecha_actualizacion: number
    _all: number
  }


  export type CursosAvgAggregateInputType = {
    id?: true
    precio?: true
    categoria_id?: true
    instructor_id?: true
    duracion_horas?: true
  }

  export type CursosSumAggregateInputType = {
    id?: true
    precio?: true
    categoria_id?: true
    instructor_id?: true
    duracion_horas?: true
  }

  export type CursosMinAggregateInputType = {
    id?: true
    titulo?: true
    descripcion?: true
    precio?: true
    categoria_id?: true
    instructor_id?: true
    duracion_horas?: true
    nivel?: true
    fecha_creacion?: true
    activo?: true
    estado_auditoria?: true
    fecha_actualizacion?: true
  }

  export type CursosMaxAggregateInputType = {
    id?: true
    titulo?: true
    descripcion?: true
    precio?: true
    categoria_id?: true
    instructor_id?: true
    duracion_horas?: true
    nivel?: true
    fecha_creacion?: true
    activo?: true
    estado_auditoria?: true
    fecha_actualizacion?: true
  }

  export type CursosCountAggregateInputType = {
    id?: true
    titulo?: true
    descripcion?: true
    precio?: true
    categoria_id?: true
    instructor_id?: true
    duracion_horas?: true
    nivel?: true
    fecha_creacion?: true
    activo?: true
    estado_auditoria?: true
    fecha_actualizacion?: true
    _all?: true
  }

  export type CursosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cursos to aggregate.
     */
    where?: cursosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cursos to fetch.
     */
    orderBy?: cursosOrderByWithRelationInput | cursosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cursosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cursos
    **/
    _count?: true | CursosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CursosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CursosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CursosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CursosMaxAggregateInputType
  }

  export type GetCursosAggregateType<T extends CursosAggregateArgs> = {
        [P in keyof T & keyof AggregateCursos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCursos[P]>
      : GetScalarType<T[P], AggregateCursos[P]>
  }




  export type cursosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cursosWhereInput
    orderBy?: cursosOrderByWithAggregationInput | cursosOrderByWithAggregationInput[]
    by: CursosScalarFieldEnum[] | CursosScalarFieldEnum
    having?: cursosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CursosCountAggregateInputType | true
    _avg?: CursosAvgAggregateInputType
    _sum?: CursosSumAggregateInputType
    _min?: CursosMinAggregateInputType
    _max?: CursosMaxAggregateInputType
  }

  export type CursosGroupByOutputType = {
    id: number
    titulo: string
    descripcion: string | null
    precio: Decimal
    categoria_id: number | null
    instructor_id: number | null
    duracion_horas: number | null
    nivel: string | null
    fecha_creacion: Date | null
    activo: boolean | null
    estado_auditoria: string | null
    fecha_actualizacion: Date | null
    _count: CursosCountAggregateOutputType | null
    _avg: CursosAvgAggregateOutputType | null
    _sum: CursosSumAggregateOutputType | null
    _min: CursosMinAggregateOutputType | null
    _max: CursosMaxAggregateOutputType | null
  }

  type GetCursosGroupByPayload<T extends cursosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CursosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CursosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CursosGroupByOutputType[P]>
            : GetScalarType<T[P], CursosGroupByOutputType[P]>
        }
      >
    >


  export type cursosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    precio?: boolean
    categoria_id?: boolean
    instructor_id?: boolean
    duracion_horas?: boolean
    nivel?: boolean
    fecha_creacion?: boolean
    activo?: boolean
    estado_auditoria?: boolean
    fecha_actualizacion?: boolean
    categorias?: boolean | cursos$categoriasArgs<ExtArgs>
    instructores?: boolean | cursos$instructoresArgs<ExtArgs>
    inscripciones?: boolean | cursos$inscripcionesArgs<ExtArgs>
    modulos?: boolean | cursos$modulosArgs<ExtArgs>
    _count?: boolean | CursosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cursos"]>

  export type cursosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    precio?: boolean
    categoria_id?: boolean
    instructor_id?: boolean
    duracion_horas?: boolean
    nivel?: boolean
    fecha_creacion?: boolean
    activo?: boolean
    estado_auditoria?: boolean
    fecha_actualizacion?: boolean
    categorias?: boolean | cursos$categoriasArgs<ExtArgs>
    instructores?: boolean | cursos$instructoresArgs<ExtArgs>
  }, ExtArgs["result"]["cursos"]>

  export type cursosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    precio?: boolean
    categoria_id?: boolean
    instructor_id?: boolean
    duracion_horas?: boolean
    nivel?: boolean
    fecha_creacion?: boolean
    activo?: boolean
    estado_auditoria?: boolean
    fecha_actualizacion?: boolean
    categorias?: boolean | cursos$categoriasArgs<ExtArgs>
    instructores?: boolean | cursos$instructoresArgs<ExtArgs>
  }, ExtArgs["result"]["cursos"]>

  export type cursosSelectScalar = {
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    precio?: boolean
    categoria_id?: boolean
    instructor_id?: boolean
    duracion_horas?: boolean
    nivel?: boolean
    fecha_creacion?: boolean
    activo?: boolean
    estado_auditoria?: boolean
    fecha_actualizacion?: boolean
  }

  export type cursosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "descripcion" | "precio" | "categoria_id" | "instructor_id" | "duracion_horas" | "nivel" | "fecha_creacion" | "activo" | "estado_auditoria" | "fecha_actualizacion", ExtArgs["result"]["cursos"]>
  export type cursosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categorias?: boolean | cursos$categoriasArgs<ExtArgs>
    instructores?: boolean | cursos$instructoresArgs<ExtArgs>
    inscripciones?: boolean | cursos$inscripcionesArgs<ExtArgs>
    modulos?: boolean | cursos$modulosArgs<ExtArgs>
    _count?: boolean | CursosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type cursosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categorias?: boolean | cursos$categoriasArgs<ExtArgs>
    instructores?: boolean | cursos$instructoresArgs<ExtArgs>
  }
  export type cursosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categorias?: boolean | cursos$categoriasArgs<ExtArgs>
    instructores?: boolean | cursos$instructoresArgs<ExtArgs>
  }

  export type $cursosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cursos"
    objects: {
      categorias: Prisma.$categoriasPayload<ExtArgs> | null
      instructores: Prisma.$instructoresPayload<ExtArgs> | null
      inscripciones: Prisma.$inscripcionesPayload<ExtArgs>[]
      modulos: Prisma.$modulosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      descripcion: string | null
      precio: Prisma.Decimal
      categoria_id: number | null
      instructor_id: number | null
      duracion_horas: number | null
      nivel: string | null
      fecha_creacion: Date | null
      activo: boolean | null
      estado_auditoria: string | null
      fecha_actualizacion: Date | null
    }, ExtArgs["result"]["cursos"]>
    composites: {}
  }

  type cursosGetPayload<S extends boolean | null | undefined | cursosDefaultArgs> = $Result.GetResult<Prisma.$cursosPayload, S>

  type cursosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cursosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CursosCountAggregateInputType | true
    }

  export interface cursosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cursos'], meta: { name: 'cursos' } }
    /**
     * Find zero or one Cursos that matches the filter.
     * @param {cursosFindUniqueArgs} args - Arguments to find a Cursos
     * @example
     * // Get one Cursos
     * const cursos = await prisma.cursos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cursosFindUniqueArgs>(args: SelectSubset<T, cursosFindUniqueArgs<ExtArgs>>): Prisma__cursosClient<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cursos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cursosFindUniqueOrThrowArgs} args - Arguments to find a Cursos
     * @example
     * // Get one Cursos
     * const cursos = await prisma.cursos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cursosFindUniqueOrThrowArgs>(args: SelectSubset<T, cursosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cursosClient<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cursos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cursosFindFirstArgs} args - Arguments to find a Cursos
     * @example
     * // Get one Cursos
     * const cursos = await prisma.cursos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cursosFindFirstArgs>(args?: SelectSubset<T, cursosFindFirstArgs<ExtArgs>>): Prisma__cursosClient<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cursos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cursosFindFirstOrThrowArgs} args - Arguments to find a Cursos
     * @example
     * // Get one Cursos
     * const cursos = await prisma.cursos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cursosFindFirstOrThrowArgs>(args?: SelectSubset<T, cursosFindFirstOrThrowArgs<ExtArgs>>): Prisma__cursosClient<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cursos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cursosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cursos
     * const cursos = await prisma.cursos.findMany()
     * 
     * // Get first 10 Cursos
     * const cursos = await prisma.cursos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cursosWithIdOnly = await prisma.cursos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cursosFindManyArgs>(args?: SelectSubset<T, cursosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cursos.
     * @param {cursosCreateArgs} args - Arguments to create a Cursos.
     * @example
     * // Create one Cursos
     * const Cursos = await prisma.cursos.create({
     *   data: {
     *     // ... data to create a Cursos
     *   }
     * })
     * 
     */
    create<T extends cursosCreateArgs>(args: SelectSubset<T, cursosCreateArgs<ExtArgs>>): Prisma__cursosClient<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cursos.
     * @param {cursosCreateManyArgs} args - Arguments to create many Cursos.
     * @example
     * // Create many Cursos
     * const cursos = await prisma.cursos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cursosCreateManyArgs>(args?: SelectSubset<T, cursosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cursos and returns the data saved in the database.
     * @param {cursosCreateManyAndReturnArgs} args - Arguments to create many Cursos.
     * @example
     * // Create many Cursos
     * const cursos = await prisma.cursos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cursos and only return the `id`
     * const cursosWithIdOnly = await prisma.cursos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cursosCreateManyAndReturnArgs>(args?: SelectSubset<T, cursosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cursos.
     * @param {cursosDeleteArgs} args - Arguments to delete one Cursos.
     * @example
     * // Delete one Cursos
     * const Cursos = await prisma.cursos.delete({
     *   where: {
     *     // ... filter to delete one Cursos
     *   }
     * })
     * 
     */
    delete<T extends cursosDeleteArgs>(args: SelectSubset<T, cursosDeleteArgs<ExtArgs>>): Prisma__cursosClient<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cursos.
     * @param {cursosUpdateArgs} args - Arguments to update one Cursos.
     * @example
     * // Update one Cursos
     * const cursos = await prisma.cursos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cursosUpdateArgs>(args: SelectSubset<T, cursosUpdateArgs<ExtArgs>>): Prisma__cursosClient<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cursos.
     * @param {cursosDeleteManyArgs} args - Arguments to filter Cursos to delete.
     * @example
     * // Delete a few Cursos
     * const { count } = await prisma.cursos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cursosDeleteManyArgs>(args?: SelectSubset<T, cursosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cursosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cursos
     * const cursos = await prisma.cursos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cursosUpdateManyArgs>(args: SelectSubset<T, cursosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cursos and returns the data updated in the database.
     * @param {cursosUpdateManyAndReturnArgs} args - Arguments to update many Cursos.
     * @example
     * // Update many Cursos
     * const cursos = await prisma.cursos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cursos and only return the `id`
     * const cursosWithIdOnly = await prisma.cursos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cursosUpdateManyAndReturnArgs>(args: SelectSubset<T, cursosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cursos.
     * @param {cursosUpsertArgs} args - Arguments to update or create a Cursos.
     * @example
     * // Update or create a Cursos
     * const cursos = await prisma.cursos.upsert({
     *   create: {
     *     // ... data to create a Cursos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cursos we want to update
     *   }
     * })
     */
    upsert<T extends cursosUpsertArgs>(args: SelectSubset<T, cursosUpsertArgs<ExtArgs>>): Prisma__cursosClient<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cursosCountArgs} args - Arguments to filter Cursos to count.
     * @example
     * // Count the number of Cursos
     * const count = await prisma.cursos.count({
     *   where: {
     *     // ... the filter for the Cursos we want to count
     *   }
     * })
    **/
    count<T extends cursosCountArgs>(
      args?: Subset<T, cursosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CursosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CursosAggregateArgs>(args: Subset<T, CursosAggregateArgs>): Prisma.PrismaPromise<GetCursosAggregateType<T>>

    /**
     * Group by Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cursosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cursosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cursosGroupByArgs['orderBy'] }
        : { orderBy?: cursosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cursosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCursosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cursos model
   */
  readonly fields: cursosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cursos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cursosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categorias<T extends cursos$categoriasArgs<ExtArgs> = {}>(args?: Subset<T, cursos$categoriasArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    instructores<T extends cursos$instructoresArgs<ExtArgs> = {}>(args?: Subset<T, cursos$instructoresArgs<ExtArgs>>): Prisma__instructoresClient<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    inscripciones<T extends cursos$inscripcionesArgs<ExtArgs> = {}>(args?: Subset<T, cursos$inscripcionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    modulos<T extends cursos$modulosArgs<ExtArgs> = {}>(args?: Subset<T, cursos$modulosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cursos model
   */
  interface cursosFieldRefs {
    readonly id: FieldRef<"cursos", 'Int'>
    readonly titulo: FieldRef<"cursos", 'String'>
    readonly descripcion: FieldRef<"cursos", 'String'>
    readonly precio: FieldRef<"cursos", 'Decimal'>
    readonly categoria_id: FieldRef<"cursos", 'Int'>
    readonly instructor_id: FieldRef<"cursos", 'Int'>
    readonly duracion_horas: FieldRef<"cursos", 'Int'>
    readonly nivel: FieldRef<"cursos", 'String'>
    readonly fecha_creacion: FieldRef<"cursos", 'DateTime'>
    readonly activo: FieldRef<"cursos", 'Boolean'>
    readonly estado_auditoria: FieldRef<"cursos", 'String'>
    readonly fecha_actualizacion: FieldRef<"cursos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * cursos findUnique
   */
  export type cursosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    /**
     * Filter, which cursos to fetch.
     */
    where: cursosWhereUniqueInput
  }

  /**
   * cursos findUniqueOrThrow
   */
  export type cursosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    /**
     * Filter, which cursos to fetch.
     */
    where: cursosWhereUniqueInput
  }

  /**
   * cursos findFirst
   */
  export type cursosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    /**
     * Filter, which cursos to fetch.
     */
    where?: cursosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cursos to fetch.
     */
    orderBy?: cursosOrderByWithRelationInput | cursosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cursos.
     */
    cursor?: cursosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cursos.
     */
    distinct?: CursosScalarFieldEnum | CursosScalarFieldEnum[]
  }

  /**
   * cursos findFirstOrThrow
   */
  export type cursosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    /**
     * Filter, which cursos to fetch.
     */
    where?: cursosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cursos to fetch.
     */
    orderBy?: cursosOrderByWithRelationInput | cursosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cursos.
     */
    cursor?: cursosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cursos.
     */
    distinct?: CursosScalarFieldEnum | CursosScalarFieldEnum[]
  }

  /**
   * cursos findMany
   */
  export type cursosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    /**
     * Filter, which cursos to fetch.
     */
    where?: cursosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cursos to fetch.
     */
    orderBy?: cursosOrderByWithRelationInput | cursosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cursos.
     */
    cursor?: cursosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cursos.
     */
    skip?: number
    distinct?: CursosScalarFieldEnum | CursosScalarFieldEnum[]
  }

  /**
   * cursos create
   */
  export type cursosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    /**
     * The data needed to create a cursos.
     */
    data: XOR<cursosCreateInput, cursosUncheckedCreateInput>
  }

  /**
   * cursos createMany
   */
  export type cursosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cursos.
     */
    data: cursosCreateManyInput | cursosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cursos createManyAndReturn
   */
  export type cursosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * The data used to create many cursos.
     */
    data: cursosCreateManyInput | cursosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cursos update
   */
  export type cursosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    /**
     * The data needed to update a cursos.
     */
    data: XOR<cursosUpdateInput, cursosUncheckedUpdateInput>
    /**
     * Choose, which cursos to update.
     */
    where: cursosWhereUniqueInput
  }

  /**
   * cursos updateMany
   */
  export type cursosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cursos.
     */
    data: XOR<cursosUpdateManyMutationInput, cursosUncheckedUpdateManyInput>
    /**
     * Filter which cursos to update
     */
    where?: cursosWhereInput
    /**
     * Limit how many cursos to update.
     */
    limit?: number
  }

  /**
   * cursos updateManyAndReturn
   */
  export type cursosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * The data used to update cursos.
     */
    data: XOR<cursosUpdateManyMutationInput, cursosUncheckedUpdateManyInput>
    /**
     * Filter which cursos to update
     */
    where?: cursosWhereInput
    /**
     * Limit how many cursos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cursos upsert
   */
  export type cursosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    /**
     * The filter to search for the cursos to update in case it exists.
     */
    where: cursosWhereUniqueInput
    /**
     * In case the cursos found by the `where` argument doesn't exist, create a new cursos with this data.
     */
    create: XOR<cursosCreateInput, cursosUncheckedCreateInput>
    /**
     * In case the cursos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cursosUpdateInput, cursosUncheckedUpdateInput>
  }

  /**
   * cursos delete
   */
  export type cursosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    /**
     * Filter which cursos to delete.
     */
    where: cursosWhereUniqueInput
  }

  /**
   * cursos deleteMany
   */
  export type cursosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cursos to delete
     */
    where?: cursosWhereInput
    /**
     * Limit how many cursos to delete.
     */
    limit?: number
  }

  /**
   * cursos.categorias
   */
  export type cursos$categoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categorias
     */
    omit?: categoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriasInclude<ExtArgs> | null
    where?: categoriasWhereInput
  }

  /**
   * cursos.instructores
   */
  export type cursos$instructoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
    where?: instructoresWhereInput
  }

  /**
   * cursos.inscripciones
   */
  export type cursos$inscripcionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
    where?: inscripcionesWhereInput
    orderBy?: inscripcionesOrderByWithRelationInput | inscripcionesOrderByWithRelationInput[]
    cursor?: inscripcionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InscripcionesScalarFieldEnum | InscripcionesScalarFieldEnum[]
  }

  /**
   * cursos.modulos
   */
  export type cursos$modulosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosInclude<ExtArgs> | null
    where?: modulosWhereInput
    orderBy?: modulosOrderByWithRelationInput | modulosOrderByWithRelationInput[]
    cursor?: modulosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModulosScalarFieldEnum | ModulosScalarFieldEnum[]
  }

  /**
   * cursos without action
   */
  export type cursosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
  }


  /**
   * Model inscripciones
   */

  export type AggregateInscripciones = {
    _count: InscripcionesCountAggregateOutputType | null
    _avg: InscripcionesAvgAggregateOutputType | null
    _sum: InscripcionesSumAggregateOutputType | null
    _min: InscripcionesMinAggregateOutputType | null
    _max: InscripcionesMaxAggregateOutputType | null
  }

  export type InscripcionesAvgAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    curso_id: number | null
    progreso: Decimal | null
  }

  export type InscripcionesSumAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    curso_id: number | null
    progreso: Decimal | null
  }

  export type InscripcionesMinAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    curso_id: number | null
    fecha_inscripcion: Date | null
    progreso: Decimal | null
    completado: boolean | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type InscripcionesMaxAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    curso_id: number | null
    fecha_inscripcion: Date | null
    progreso: Decimal | null
    completado: boolean | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type InscripcionesCountAggregateOutputType = {
    id: number
    usuario_id: number
    curso_id: number
    fecha_inscripcion: number
    progreso: number
    completado: number
    estado_auditoria: number
    fecha_creacion: number
    fecha_actualizacion: number
    _all: number
  }


  export type InscripcionesAvgAggregateInputType = {
    id?: true
    usuario_id?: true
    curso_id?: true
    progreso?: true
  }

  export type InscripcionesSumAggregateInputType = {
    id?: true
    usuario_id?: true
    curso_id?: true
    progreso?: true
  }

  export type InscripcionesMinAggregateInputType = {
    id?: true
    usuario_id?: true
    curso_id?: true
    fecha_inscripcion?: true
    progreso?: true
    completado?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type InscripcionesMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    curso_id?: true
    fecha_inscripcion?: true
    progreso?: true
    completado?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type InscripcionesCountAggregateInputType = {
    id?: true
    usuario_id?: true
    curso_id?: true
    fecha_inscripcion?: true
    progreso?: true
    completado?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
    _all?: true
  }

  export type InscripcionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which inscripciones to aggregate.
     */
    where?: inscripcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inscripciones to fetch.
     */
    orderBy?: inscripcionesOrderByWithRelationInput | inscripcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: inscripcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inscripciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inscripciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned inscripciones
    **/
    _count?: true | InscripcionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InscripcionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InscripcionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InscripcionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InscripcionesMaxAggregateInputType
  }

  export type GetInscripcionesAggregateType<T extends InscripcionesAggregateArgs> = {
        [P in keyof T & keyof AggregateInscripciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInscripciones[P]>
      : GetScalarType<T[P], AggregateInscripciones[P]>
  }




  export type inscripcionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: inscripcionesWhereInput
    orderBy?: inscripcionesOrderByWithAggregationInput | inscripcionesOrderByWithAggregationInput[]
    by: InscripcionesScalarFieldEnum[] | InscripcionesScalarFieldEnum
    having?: inscripcionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InscripcionesCountAggregateInputType | true
    _avg?: InscripcionesAvgAggregateInputType
    _sum?: InscripcionesSumAggregateInputType
    _min?: InscripcionesMinAggregateInputType
    _max?: InscripcionesMaxAggregateInputType
  }

  export type InscripcionesGroupByOutputType = {
    id: number
    usuario_id: number | null
    curso_id: number | null
    fecha_inscripcion: Date | null
    progreso: Decimal | null
    completado: boolean | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
    _count: InscripcionesCountAggregateOutputType | null
    _avg: InscripcionesAvgAggregateOutputType | null
    _sum: InscripcionesSumAggregateOutputType | null
    _min: InscripcionesMinAggregateOutputType | null
    _max: InscripcionesMaxAggregateOutputType | null
  }

  type GetInscripcionesGroupByPayload<T extends inscripcionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InscripcionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InscripcionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InscripcionesGroupByOutputType[P]>
            : GetScalarType<T[P], InscripcionesGroupByOutputType[P]>
        }
      >
    >


  export type inscripcionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    curso_id?: boolean
    fecha_inscripcion?: boolean
    progreso?: boolean
    completado?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    cursos?: boolean | inscripciones$cursosArgs<ExtArgs>
    usuarios?: boolean | inscripciones$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["inscripciones"]>

  export type inscripcionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    curso_id?: boolean
    fecha_inscripcion?: boolean
    progreso?: boolean
    completado?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    cursos?: boolean | inscripciones$cursosArgs<ExtArgs>
    usuarios?: boolean | inscripciones$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["inscripciones"]>

  export type inscripcionesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    curso_id?: boolean
    fecha_inscripcion?: boolean
    progreso?: boolean
    completado?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    cursos?: boolean | inscripciones$cursosArgs<ExtArgs>
    usuarios?: boolean | inscripciones$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["inscripciones"]>

  export type inscripcionesSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    curso_id?: boolean
    fecha_inscripcion?: boolean
    progreso?: boolean
    completado?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
  }

  export type inscripcionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "curso_id" | "fecha_inscripcion" | "progreso" | "completado" | "estado_auditoria" | "fecha_creacion" | "fecha_actualizacion", ExtArgs["result"]["inscripciones"]>
  export type inscripcionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | inscripciones$cursosArgs<ExtArgs>
    usuarios?: boolean | inscripciones$usuariosArgs<ExtArgs>
  }
  export type inscripcionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | inscripciones$cursosArgs<ExtArgs>
    usuarios?: boolean | inscripciones$usuariosArgs<ExtArgs>
  }
  export type inscripcionesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | inscripciones$cursosArgs<ExtArgs>
    usuarios?: boolean | inscripciones$usuariosArgs<ExtArgs>
  }

  export type $inscripcionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "inscripciones"
    objects: {
      cursos: Prisma.$cursosPayload<ExtArgs> | null
      usuarios: Prisma.$usuariosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuario_id: number | null
      curso_id: number | null
      fecha_inscripcion: Date | null
      progreso: Prisma.Decimal | null
      completado: boolean | null
      estado_auditoria: string | null
      fecha_creacion: Date | null
      fecha_actualizacion: Date | null
    }, ExtArgs["result"]["inscripciones"]>
    composites: {}
  }

  type inscripcionesGetPayload<S extends boolean | null | undefined | inscripcionesDefaultArgs> = $Result.GetResult<Prisma.$inscripcionesPayload, S>

  type inscripcionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<inscripcionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InscripcionesCountAggregateInputType | true
    }

  export interface inscripcionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['inscripciones'], meta: { name: 'inscripciones' } }
    /**
     * Find zero or one Inscripciones that matches the filter.
     * @param {inscripcionesFindUniqueArgs} args - Arguments to find a Inscripciones
     * @example
     * // Get one Inscripciones
     * const inscripciones = await prisma.inscripciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends inscripcionesFindUniqueArgs>(args: SelectSubset<T, inscripcionesFindUniqueArgs<ExtArgs>>): Prisma__inscripcionesClient<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Inscripciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {inscripcionesFindUniqueOrThrowArgs} args - Arguments to find a Inscripciones
     * @example
     * // Get one Inscripciones
     * const inscripciones = await prisma.inscripciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends inscripcionesFindUniqueOrThrowArgs>(args: SelectSubset<T, inscripcionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__inscripcionesClient<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inscripciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscripcionesFindFirstArgs} args - Arguments to find a Inscripciones
     * @example
     * // Get one Inscripciones
     * const inscripciones = await prisma.inscripciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends inscripcionesFindFirstArgs>(args?: SelectSubset<T, inscripcionesFindFirstArgs<ExtArgs>>): Prisma__inscripcionesClient<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inscripciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscripcionesFindFirstOrThrowArgs} args - Arguments to find a Inscripciones
     * @example
     * // Get one Inscripciones
     * const inscripciones = await prisma.inscripciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends inscripcionesFindFirstOrThrowArgs>(args?: SelectSubset<T, inscripcionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__inscripcionesClient<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Inscripciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscripcionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inscripciones
     * const inscripciones = await prisma.inscripciones.findMany()
     * 
     * // Get first 10 Inscripciones
     * const inscripciones = await prisma.inscripciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inscripcionesWithIdOnly = await prisma.inscripciones.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends inscripcionesFindManyArgs>(args?: SelectSubset<T, inscripcionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Inscripciones.
     * @param {inscripcionesCreateArgs} args - Arguments to create a Inscripciones.
     * @example
     * // Create one Inscripciones
     * const Inscripciones = await prisma.inscripciones.create({
     *   data: {
     *     // ... data to create a Inscripciones
     *   }
     * })
     * 
     */
    create<T extends inscripcionesCreateArgs>(args: SelectSubset<T, inscripcionesCreateArgs<ExtArgs>>): Prisma__inscripcionesClient<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Inscripciones.
     * @param {inscripcionesCreateManyArgs} args - Arguments to create many Inscripciones.
     * @example
     * // Create many Inscripciones
     * const inscripciones = await prisma.inscripciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends inscripcionesCreateManyArgs>(args?: SelectSubset<T, inscripcionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Inscripciones and returns the data saved in the database.
     * @param {inscripcionesCreateManyAndReturnArgs} args - Arguments to create many Inscripciones.
     * @example
     * // Create many Inscripciones
     * const inscripciones = await prisma.inscripciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Inscripciones and only return the `id`
     * const inscripcionesWithIdOnly = await prisma.inscripciones.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends inscripcionesCreateManyAndReturnArgs>(args?: SelectSubset<T, inscripcionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Inscripciones.
     * @param {inscripcionesDeleteArgs} args - Arguments to delete one Inscripciones.
     * @example
     * // Delete one Inscripciones
     * const Inscripciones = await prisma.inscripciones.delete({
     *   where: {
     *     // ... filter to delete one Inscripciones
     *   }
     * })
     * 
     */
    delete<T extends inscripcionesDeleteArgs>(args: SelectSubset<T, inscripcionesDeleteArgs<ExtArgs>>): Prisma__inscripcionesClient<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Inscripciones.
     * @param {inscripcionesUpdateArgs} args - Arguments to update one Inscripciones.
     * @example
     * // Update one Inscripciones
     * const inscripciones = await prisma.inscripciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends inscripcionesUpdateArgs>(args: SelectSubset<T, inscripcionesUpdateArgs<ExtArgs>>): Prisma__inscripcionesClient<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Inscripciones.
     * @param {inscripcionesDeleteManyArgs} args - Arguments to filter Inscripciones to delete.
     * @example
     * // Delete a few Inscripciones
     * const { count } = await prisma.inscripciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends inscripcionesDeleteManyArgs>(args?: SelectSubset<T, inscripcionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inscripciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscripcionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inscripciones
     * const inscripciones = await prisma.inscripciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends inscripcionesUpdateManyArgs>(args: SelectSubset<T, inscripcionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inscripciones and returns the data updated in the database.
     * @param {inscripcionesUpdateManyAndReturnArgs} args - Arguments to update many Inscripciones.
     * @example
     * // Update many Inscripciones
     * const inscripciones = await prisma.inscripciones.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Inscripciones and only return the `id`
     * const inscripcionesWithIdOnly = await prisma.inscripciones.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends inscripcionesUpdateManyAndReturnArgs>(args: SelectSubset<T, inscripcionesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Inscripciones.
     * @param {inscripcionesUpsertArgs} args - Arguments to update or create a Inscripciones.
     * @example
     * // Update or create a Inscripciones
     * const inscripciones = await prisma.inscripciones.upsert({
     *   create: {
     *     // ... data to create a Inscripciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inscripciones we want to update
     *   }
     * })
     */
    upsert<T extends inscripcionesUpsertArgs>(args: SelectSubset<T, inscripcionesUpsertArgs<ExtArgs>>): Prisma__inscripcionesClient<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Inscripciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscripcionesCountArgs} args - Arguments to filter Inscripciones to count.
     * @example
     * // Count the number of Inscripciones
     * const count = await prisma.inscripciones.count({
     *   where: {
     *     // ... the filter for the Inscripciones we want to count
     *   }
     * })
    **/
    count<T extends inscripcionesCountArgs>(
      args?: Subset<T, inscripcionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InscripcionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inscripciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InscripcionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InscripcionesAggregateArgs>(args: Subset<T, InscripcionesAggregateArgs>): Prisma.PrismaPromise<GetInscripcionesAggregateType<T>>

    /**
     * Group by Inscripciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscripcionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends inscripcionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: inscripcionesGroupByArgs['orderBy'] }
        : { orderBy?: inscripcionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, inscripcionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInscripcionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the inscripciones model
   */
  readonly fields: inscripcionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for inscripciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__inscripcionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cursos<T extends inscripciones$cursosArgs<ExtArgs> = {}>(args?: Subset<T, inscripciones$cursosArgs<ExtArgs>>): Prisma__cursosClient<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends inscripciones$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, inscripciones$usuariosArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the inscripciones model
   */
  interface inscripcionesFieldRefs {
    readonly id: FieldRef<"inscripciones", 'Int'>
    readonly usuario_id: FieldRef<"inscripciones", 'Int'>
    readonly curso_id: FieldRef<"inscripciones", 'Int'>
    readonly fecha_inscripcion: FieldRef<"inscripciones", 'DateTime'>
    readonly progreso: FieldRef<"inscripciones", 'Decimal'>
    readonly completado: FieldRef<"inscripciones", 'Boolean'>
    readonly estado_auditoria: FieldRef<"inscripciones", 'String'>
    readonly fecha_creacion: FieldRef<"inscripciones", 'DateTime'>
    readonly fecha_actualizacion: FieldRef<"inscripciones", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * inscripciones findUnique
   */
  export type inscripcionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
    /**
     * Filter, which inscripciones to fetch.
     */
    where: inscripcionesWhereUniqueInput
  }

  /**
   * inscripciones findUniqueOrThrow
   */
  export type inscripcionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
    /**
     * Filter, which inscripciones to fetch.
     */
    where: inscripcionesWhereUniqueInput
  }

  /**
   * inscripciones findFirst
   */
  export type inscripcionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
    /**
     * Filter, which inscripciones to fetch.
     */
    where?: inscripcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inscripciones to fetch.
     */
    orderBy?: inscripcionesOrderByWithRelationInput | inscripcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inscripciones.
     */
    cursor?: inscripcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inscripciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inscripciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inscripciones.
     */
    distinct?: InscripcionesScalarFieldEnum | InscripcionesScalarFieldEnum[]
  }

  /**
   * inscripciones findFirstOrThrow
   */
  export type inscripcionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
    /**
     * Filter, which inscripciones to fetch.
     */
    where?: inscripcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inscripciones to fetch.
     */
    orderBy?: inscripcionesOrderByWithRelationInput | inscripcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inscripciones.
     */
    cursor?: inscripcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inscripciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inscripciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inscripciones.
     */
    distinct?: InscripcionesScalarFieldEnum | InscripcionesScalarFieldEnum[]
  }

  /**
   * inscripciones findMany
   */
  export type inscripcionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
    /**
     * Filter, which inscripciones to fetch.
     */
    where?: inscripcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inscripciones to fetch.
     */
    orderBy?: inscripcionesOrderByWithRelationInput | inscripcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing inscripciones.
     */
    cursor?: inscripcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inscripciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inscripciones.
     */
    skip?: number
    distinct?: InscripcionesScalarFieldEnum | InscripcionesScalarFieldEnum[]
  }

  /**
   * inscripciones create
   */
  export type inscripcionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
    /**
     * The data needed to create a inscripciones.
     */
    data?: XOR<inscripcionesCreateInput, inscripcionesUncheckedCreateInput>
  }

  /**
   * inscripciones createMany
   */
  export type inscripcionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many inscripciones.
     */
    data: inscripcionesCreateManyInput | inscripcionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * inscripciones createManyAndReturn
   */
  export type inscripcionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * The data used to create many inscripciones.
     */
    data: inscripcionesCreateManyInput | inscripcionesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * inscripciones update
   */
  export type inscripcionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
    /**
     * The data needed to update a inscripciones.
     */
    data: XOR<inscripcionesUpdateInput, inscripcionesUncheckedUpdateInput>
    /**
     * Choose, which inscripciones to update.
     */
    where: inscripcionesWhereUniqueInput
  }

  /**
   * inscripciones updateMany
   */
  export type inscripcionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update inscripciones.
     */
    data: XOR<inscripcionesUpdateManyMutationInput, inscripcionesUncheckedUpdateManyInput>
    /**
     * Filter which inscripciones to update
     */
    where?: inscripcionesWhereInput
    /**
     * Limit how many inscripciones to update.
     */
    limit?: number
  }

  /**
   * inscripciones updateManyAndReturn
   */
  export type inscripcionesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * The data used to update inscripciones.
     */
    data: XOR<inscripcionesUpdateManyMutationInput, inscripcionesUncheckedUpdateManyInput>
    /**
     * Filter which inscripciones to update
     */
    where?: inscripcionesWhereInput
    /**
     * Limit how many inscripciones to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * inscripciones upsert
   */
  export type inscripcionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
    /**
     * The filter to search for the inscripciones to update in case it exists.
     */
    where: inscripcionesWhereUniqueInput
    /**
     * In case the inscripciones found by the `where` argument doesn't exist, create a new inscripciones with this data.
     */
    create: XOR<inscripcionesCreateInput, inscripcionesUncheckedCreateInput>
    /**
     * In case the inscripciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<inscripcionesUpdateInput, inscripcionesUncheckedUpdateInput>
  }

  /**
   * inscripciones delete
   */
  export type inscripcionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
    /**
     * Filter which inscripciones to delete.
     */
    where: inscripcionesWhereUniqueInput
  }

  /**
   * inscripciones deleteMany
   */
  export type inscripcionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which inscripciones to delete
     */
    where?: inscripcionesWhereInput
    /**
     * Limit how many inscripciones to delete.
     */
    limit?: number
  }

  /**
   * inscripciones.cursos
   */
  export type inscripciones$cursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    where?: cursosWhereInput
  }

  /**
   * inscripciones.usuarios
   */
  export type inscripciones$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
  }

  /**
   * inscripciones without action
   */
  export type inscripcionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
  }


  /**
   * Model instructores
   */

  export type AggregateInstructores = {
    _count: InstructoresCountAggregateOutputType | null
    _avg: InstructoresAvgAggregateOutputType | null
    _sum: InstructoresSumAggregateOutputType | null
    _min: InstructoresMinAggregateOutputType | null
    _max: InstructoresMaxAggregateOutputType | null
  }

  export type InstructoresAvgAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    rating: Decimal | null
  }

  export type InstructoresSumAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    rating: Decimal | null
  }

  export type InstructoresMinAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    biografia: string | null
    foto_url: string | null
    especialidad: string | null
    rating: Decimal | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type InstructoresMaxAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    biografia: string | null
    foto_url: string | null
    especialidad: string | null
    rating: Decimal | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type InstructoresCountAggregateOutputType = {
    id: number
    usuario_id: number
    biografia: number
    foto_url: number
    especialidad: number
    rating: number
    estado_auditoria: number
    fecha_creacion: number
    fecha_actualizacion: number
    _all: number
  }


  export type InstructoresAvgAggregateInputType = {
    id?: true
    usuario_id?: true
    rating?: true
  }

  export type InstructoresSumAggregateInputType = {
    id?: true
    usuario_id?: true
    rating?: true
  }

  export type InstructoresMinAggregateInputType = {
    id?: true
    usuario_id?: true
    biografia?: true
    foto_url?: true
    especialidad?: true
    rating?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type InstructoresMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    biografia?: true
    foto_url?: true
    especialidad?: true
    rating?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type InstructoresCountAggregateInputType = {
    id?: true
    usuario_id?: true
    biografia?: true
    foto_url?: true
    especialidad?: true
    rating?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
    _all?: true
  }

  export type InstructoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which instructores to aggregate.
     */
    where?: instructoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instructores to fetch.
     */
    orderBy?: instructoresOrderByWithRelationInput | instructoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: instructoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instructores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instructores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned instructores
    **/
    _count?: true | InstructoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InstructoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InstructoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InstructoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InstructoresMaxAggregateInputType
  }

  export type GetInstructoresAggregateType<T extends InstructoresAggregateArgs> = {
        [P in keyof T & keyof AggregateInstructores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInstructores[P]>
      : GetScalarType<T[P], AggregateInstructores[P]>
  }




  export type instructoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: instructoresWhereInput
    orderBy?: instructoresOrderByWithAggregationInput | instructoresOrderByWithAggregationInput[]
    by: InstructoresScalarFieldEnum[] | InstructoresScalarFieldEnum
    having?: instructoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InstructoresCountAggregateInputType | true
    _avg?: InstructoresAvgAggregateInputType
    _sum?: InstructoresSumAggregateInputType
    _min?: InstructoresMinAggregateInputType
    _max?: InstructoresMaxAggregateInputType
  }

  export type InstructoresGroupByOutputType = {
    id: number
    usuario_id: number | null
    biografia: string | null
    foto_url: string | null
    especialidad: string | null
    rating: Decimal | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
    _count: InstructoresCountAggregateOutputType | null
    _avg: InstructoresAvgAggregateOutputType | null
    _sum: InstructoresSumAggregateOutputType | null
    _min: InstructoresMinAggregateOutputType | null
    _max: InstructoresMaxAggregateOutputType | null
  }

  type GetInstructoresGroupByPayload<T extends instructoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InstructoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InstructoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InstructoresGroupByOutputType[P]>
            : GetScalarType<T[P], InstructoresGroupByOutputType[P]>
        }
      >
    >


  export type instructoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    biografia?: boolean
    foto_url?: boolean
    especialidad?: boolean
    rating?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    cursos?: boolean | instructores$cursosArgs<ExtArgs>
    usuarios?: boolean | instructores$usuariosArgs<ExtArgs>
    _count?: boolean | InstructoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["instructores"]>

  export type instructoresSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    biografia?: boolean
    foto_url?: boolean
    especialidad?: boolean
    rating?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    usuarios?: boolean | instructores$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["instructores"]>

  export type instructoresSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    biografia?: boolean
    foto_url?: boolean
    especialidad?: boolean
    rating?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    usuarios?: boolean | instructores$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["instructores"]>

  export type instructoresSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    biografia?: boolean
    foto_url?: boolean
    especialidad?: boolean
    rating?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
  }

  export type instructoresOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "biografia" | "foto_url" | "especialidad" | "rating" | "estado_auditoria" | "fecha_creacion" | "fecha_actualizacion", ExtArgs["result"]["instructores"]>
  export type instructoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | instructores$cursosArgs<ExtArgs>
    usuarios?: boolean | instructores$usuariosArgs<ExtArgs>
    _count?: boolean | InstructoresCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type instructoresIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | instructores$usuariosArgs<ExtArgs>
  }
  export type instructoresIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | instructores$usuariosArgs<ExtArgs>
  }

  export type $instructoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "instructores"
    objects: {
      cursos: Prisma.$cursosPayload<ExtArgs>[]
      usuarios: Prisma.$usuariosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuario_id: number | null
      biografia: string | null
      foto_url: string | null
      especialidad: string | null
      rating: Prisma.Decimal | null
      estado_auditoria: string | null
      fecha_creacion: Date | null
      fecha_actualizacion: Date | null
    }, ExtArgs["result"]["instructores"]>
    composites: {}
  }

  type instructoresGetPayload<S extends boolean | null | undefined | instructoresDefaultArgs> = $Result.GetResult<Prisma.$instructoresPayload, S>

  type instructoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<instructoresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InstructoresCountAggregateInputType | true
    }

  export interface instructoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['instructores'], meta: { name: 'instructores' } }
    /**
     * Find zero or one Instructores that matches the filter.
     * @param {instructoresFindUniqueArgs} args - Arguments to find a Instructores
     * @example
     * // Get one Instructores
     * const instructores = await prisma.instructores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends instructoresFindUniqueArgs>(args: SelectSubset<T, instructoresFindUniqueArgs<ExtArgs>>): Prisma__instructoresClient<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Instructores that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {instructoresFindUniqueOrThrowArgs} args - Arguments to find a Instructores
     * @example
     * // Get one Instructores
     * const instructores = await prisma.instructores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends instructoresFindUniqueOrThrowArgs>(args: SelectSubset<T, instructoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__instructoresClient<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Instructores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instructoresFindFirstArgs} args - Arguments to find a Instructores
     * @example
     * // Get one Instructores
     * const instructores = await prisma.instructores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends instructoresFindFirstArgs>(args?: SelectSubset<T, instructoresFindFirstArgs<ExtArgs>>): Prisma__instructoresClient<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Instructores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instructoresFindFirstOrThrowArgs} args - Arguments to find a Instructores
     * @example
     * // Get one Instructores
     * const instructores = await prisma.instructores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends instructoresFindFirstOrThrowArgs>(args?: SelectSubset<T, instructoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__instructoresClient<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Instructores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instructoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Instructores
     * const instructores = await prisma.instructores.findMany()
     * 
     * // Get first 10 Instructores
     * const instructores = await prisma.instructores.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const instructoresWithIdOnly = await prisma.instructores.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends instructoresFindManyArgs>(args?: SelectSubset<T, instructoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Instructores.
     * @param {instructoresCreateArgs} args - Arguments to create a Instructores.
     * @example
     * // Create one Instructores
     * const Instructores = await prisma.instructores.create({
     *   data: {
     *     // ... data to create a Instructores
     *   }
     * })
     * 
     */
    create<T extends instructoresCreateArgs>(args: SelectSubset<T, instructoresCreateArgs<ExtArgs>>): Prisma__instructoresClient<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Instructores.
     * @param {instructoresCreateManyArgs} args - Arguments to create many Instructores.
     * @example
     * // Create many Instructores
     * const instructores = await prisma.instructores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends instructoresCreateManyArgs>(args?: SelectSubset<T, instructoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Instructores and returns the data saved in the database.
     * @param {instructoresCreateManyAndReturnArgs} args - Arguments to create many Instructores.
     * @example
     * // Create many Instructores
     * const instructores = await prisma.instructores.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Instructores and only return the `id`
     * const instructoresWithIdOnly = await prisma.instructores.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends instructoresCreateManyAndReturnArgs>(args?: SelectSubset<T, instructoresCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Instructores.
     * @param {instructoresDeleteArgs} args - Arguments to delete one Instructores.
     * @example
     * // Delete one Instructores
     * const Instructores = await prisma.instructores.delete({
     *   where: {
     *     // ... filter to delete one Instructores
     *   }
     * })
     * 
     */
    delete<T extends instructoresDeleteArgs>(args: SelectSubset<T, instructoresDeleteArgs<ExtArgs>>): Prisma__instructoresClient<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Instructores.
     * @param {instructoresUpdateArgs} args - Arguments to update one Instructores.
     * @example
     * // Update one Instructores
     * const instructores = await prisma.instructores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends instructoresUpdateArgs>(args: SelectSubset<T, instructoresUpdateArgs<ExtArgs>>): Prisma__instructoresClient<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Instructores.
     * @param {instructoresDeleteManyArgs} args - Arguments to filter Instructores to delete.
     * @example
     * // Delete a few Instructores
     * const { count } = await prisma.instructores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends instructoresDeleteManyArgs>(args?: SelectSubset<T, instructoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Instructores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instructoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Instructores
     * const instructores = await prisma.instructores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends instructoresUpdateManyArgs>(args: SelectSubset<T, instructoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Instructores and returns the data updated in the database.
     * @param {instructoresUpdateManyAndReturnArgs} args - Arguments to update many Instructores.
     * @example
     * // Update many Instructores
     * const instructores = await prisma.instructores.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Instructores and only return the `id`
     * const instructoresWithIdOnly = await prisma.instructores.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends instructoresUpdateManyAndReturnArgs>(args: SelectSubset<T, instructoresUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Instructores.
     * @param {instructoresUpsertArgs} args - Arguments to update or create a Instructores.
     * @example
     * // Update or create a Instructores
     * const instructores = await prisma.instructores.upsert({
     *   create: {
     *     // ... data to create a Instructores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Instructores we want to update
     *   }
     * })
     */
    upsert<T extends instructoresUpsertArgs>(args: SelectSubset<T, instructoresUpsertArgs<ExtArgs>>): Prisma__instructoresClient<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Instructores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instructoresCountArgs} args - Arguments to filter Instructores to count.
     * @example
     * // Count the number of Instructores
     * const count = await prisma.instructores.count({
     *   where: {
     *     // ... the filter for the Instructores we want to count
     *   }
     * })
    **/
    count<T extends instructoresCountArgs>(
      args?: Subset<T, instructoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InstructoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Instructores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstructoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InstructoresAggregateArgs>(args: Subset<T, InstructoresAggregateArgs>): Prisma.PrismaPromise<GetInstructoresAggregateType<T>>

    /**
     * Group by Instructores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instructoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends instructoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: instructoresGroupByArgs['orderBy'] }
        : { orderBy?: instructoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, instructoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInstructoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the instructores model
   */
  readonly fields: instructoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for instructores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__instructoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cursos<T extends instructores$cursosArgs<ExtArgs> = {}>(args?: Subset<T, instructores$cursosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuarios<T extends instructores$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, instructores$usuariosArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the instructores model
   */
  interface instructoresFieldRefs {
    readonly id: FieldRef<"instructores", 'Int'>
    readonly usuario_id: FieldRef<"instructores", 'Int'>
    readonly biografia: FieldRef<"instructores", 'String'>
    readonly foto_url: FieldRef<"instructores", 'String'>
    readonly especialidad: FieldRef<"instructores", 'String'>
    readonly rating: FieldRef<"instructores", 'Decimal'>
    readonly estado_auditoria: FieldRef<"instructores", 'String'>
    readonly fecha_creacion: FieldRef<"instructores", 'DateTime'>
    readonly fecha_actualizacion: FieldRef<"instructores", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * instructores findUnique
   */
  export type instructoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
    /**
     * Filter, which instructores to fetch.
     */
    where: instructoresWhereUniqueInput
  }

  /**
   * instructores findUniqueOrThrow
   */
  export type instructoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
    /**
     * Filter, which instructores to fetch.
     */
    where: instructoresWhereUniqueInput
  }

  /**
   * instructores findFirst
   */
  export type instructoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
    /**
     * Filter, which instructores to fetch.
     */
    where?: instructoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instructores to fetch.
     */
    orderBy?: instructoresOrderByWithRelationInput | instructoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for instructores.
     */
    cursor?: instructoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instructores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instructores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of instructores.
     */
    distinct?: InstructoresScalarFieldEnum | InstructoresScalarFieldEnum[]
  }

  /**
   * instructores findFirstOrThrow
   */
  export type instructoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
    /**
     * Filter, which instructores to fetch.
     */
    where?: instructoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instructores to fetch.
     */
    orderBy?: instructoresOrderByWithRelationInput | instructoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for instructores.
     */
    cursor?: instructoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instructores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instructores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of instructores.
     */
    distinct?: InstructoresScalarFieldEnum | InstructoresScalarFieldEnum[]
  }

  /**
   * instructores findMany
   */
  export type instructoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
    /**
     * Filter, which instructores to fetch.
     */
    where?: instructoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instructores to fetch.
     */
    orderBy?: instructoresOrderByWithRelationInput | instructoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing instructores.
     */
    cursor?: instructoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instructores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instructores.
     */
    skip?: number
    distinct?: InstructoresScalarFieldEnum | InstructoresScalarFieldEnum[]
  }

  /**
   * instructores create
   */
  export type instructoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
    /**
     * The data needed to create a instructores.
     */
    data?: XOR<instructoresCreateInput, instructoresUncheckedCreateInput>
  }

  /**
   * instructores createMany
   */
  export type instructoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many instructores.
     */
    data: instructoresCreateManyInput | instructoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * instructores createManyAndReturn
   */
  export type instructoresCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * The data used to create many instructores.
     */
    data: instructoresCreateManyInput | instructoresCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * instructores update
   */
  export type instructoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
    /**
     * The data needed to update a instructores.
     */
    data: XOR<instructoresUpdateInput, instructoresUncheckedUpdateInput>
    /**
     * Choose, which instructores to update.
     */
    where: instructoresWhereUniqueInput
  }

  /**
   * instructores updateMany
   */
  export type instructoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update instructores.
     */
    data: XOR<instructoresUpdateManyMutationInput, instructoresUncheckedUpdateManyInput>
    /**
     * Filter which instructores to update
     */
    where?: instructoresWhereInput
    /**
     * Limit how many instructores to update.
     */
    limit?: number
  }

  /**
   * instructores updateManyAndReturn
   */
  export type instructoresUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * The data used to update instructores.
     */
    data: XOR<instructoresUpdateManyMutationInput, instructoresUncheckedUpdateManyInput>
    /**
     * Filter which instructores to update
     */
    where?: instructoresWhereInput
    /**
     * Limit how many instructores to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * instructores upsert
   */
  export type instructoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
    /**
     * The filter to search for the instructores to update in case it exists.
     */
    where: instructoresWhereUniqueInput
    /**
     * In case the instructores found by the `where` argument doesn't exist, create a new instructores with this data.
     */
    create: XOR<instructoresCreateInput, instructoresUncheckedCreateInput>
    /**
     * In case the instructores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<instructoresUpdateInput, instructoresUncheckedUpdateInput>
  }

  /**
   * instructores delete
   */
  export type instructoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
    /**
     * Filter which instructores to delete.
     */
    where: instructoresWhereUniqueInput
  }

  /**
   * instructores deleteMany
   */
  export type instructoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which instructores to delete
     */
    where?: instructoresWhereInput
    /**
     * Limit how many instructores to delete.
     */
    limit?: number
  }

  /**
   * instructores.cursos
   */
  export type instructores$cursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    where?: cursosWhereInput
    orderBy?: cursosOrderByWithRelationInput | cursosOrderByWithRelationInput[]
    cursor?: cursosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CursosScalarFieldEnum | CursosScalarFieldEnum[]
  }

  /**
   * instructores.usuarios
   */
  export type instructores$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
  }

  /**
   * instructores without action
   */
  export type instructoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
  }


  /**
   * Model modulos
   */

  export type AggregateModulos = {
    _count: ModulosCountAggregateOutputType | null
    _avg: ModulosAvgAggregateOutputType | null
    _sum: ModulosSumAggregateOutputType | null
    _min: ModulosMinAggregateOutputType | null
    _max: ModulosMaxAggregateOutputType | null
  }

  export type ModulosAvgAggregateOutputType = {
    id: number | null
    curso_id: number | null
    orden: number | null
  }

  export type ModulosSumAggregateOutputType = {
    id: number | null
    curso_id: number | null
    orden: number | null
  }

  export type ModulosMinAggregateOutputType = {
    id: number | null
    curso_id: number | null
    titulo: string | null
    descripcion: string | null
    orden: number | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type ModulosMaxAggregateOutputType = {
    id: number | null
    curso_id: number | null
    titulo: string | null
    descripcion: string | null
    orden: number | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type ModulosCountAggregateOutputType = {
    id: number
    curso_id: number
    titulo: number
    descripcion: number
    orden: number
    estado_auditoria: number
    fecha_creacion: number
    fecha_actualizacion: number
    _all: number
  }


  export type ModulosAvgAggregateInputType = {
    id?: true
    curso_id?: true
    orden?: true
  }

  export type ModulosSumAggregateInputType = {
    id?: true
    curso_id?: true
    orden?: true
  }

  export type ModulosMinAggregateInputType = {
    id?: true
    curso_id?: true
    titulo?: true
    descripcion?: true
    orden?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type ModulosMaxAggregateInputType = {
    id?: true
    curso_id?: true
    titulo?: true
    descripcion?: true
    orden?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type ModulosCountAggregateInputType = {
    id?: true
    curso_id?: true
    titulo?: true
    descripcion?: true
    orden?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
    _all?: true
  }

  export type ModulosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which modulos to aggregate.
     */
    where?: modulosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modulos to fetch.
     */
    orderBy?: modulosOrderByWithRelationInput | modulosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: modulosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modulos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modulos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned modulos
    **/
    _count?: true | ModulosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModulosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModulosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModulosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModulosMaxAggregateInputType
  }

  export type GetModulosAggregateType<T extends ModulosAggregateArgs> = {
        [P in keyof T & keyof AggregateModulos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModulos[P]>
      : GetScalarType<T[P], AggregateModulos[P]>
  }




  export type modulosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: modulosWhereInput
    orderBy?: modulosOrderByWithAggregationInput | modulosOrderByWithAggregationInput[]
    by: ModulosScalarFieldEnum[] | ModulosScalarFieldEnum
    having?: modulosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModulosCountAggregateInputType | true
    _avg?: ModulosAvgAggregateInputType
    _sum?: ModulosSumAggregateInputType
    _min?: ModulosMinAggregateInputType
    _max?: ModulosMaxAggregateInputType
  }

  export type ModulosGroupByOutputType = {
    id: number
    curso_id: number | null
    titulo: string
    descripcion: string | null
    orden: number
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
    _count: ModulosCountAggregateOutputType | null
    _avg: ModulosAvgAggregateOutputType | null
    _sum: ModulosSumAggregateOutputType | null
    _min: ModulosMinAggregateOutputType | null
    _max: ModulosMaxAggregateOutputType | null
  }

  type GetModulosGroupByPayload<T extends modulosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModulosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModulosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModulosGroupByOutputType[P]>
            : GetScalarType<T[P], ModulosGroupByOutputType[P]>
        }
      >
    >


  export type modulosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    curso_id?: boolean
    titulo?: boolean
    descripcion?: boolean
    orden?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    cursos?: boolean | modulos$cursosArgs<ExtArgs>
  }, ExtArgs["result"]["modulos"]>

  export type modulosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    curso_id?: boolean
    titulo?: boolean
    descripcion?: boolean
    orden?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    cursos?: boolean | modulos$cursosArgs<ExtArgs>
  }, ExtArgs["result"]["modulos"]>

  export type modulosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    curso_id?: boolean
    titulo?: boolean
    descripcion?: boolean
    orden?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    cursos?: boolean | modulos$cursosArgs<ExtArgs>
  }, ExtArgs["result"]["modulos"]>

  export type modulosSelectScalar = {
    id?: boolean
    curso_id?: boolean
    titulo?: boolean
    descripcion?: boolean
    orden?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
  }

  export type modulosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "curso_id" | "titulo" | "descripcion" | "orden" | "estado_auditoria" | "fecha_creacion" | "fecha_actualizacion", ExtArgs["result"]["modulos"]>
  export type modulosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | modulos$cursosArgs<ExtArgs>
  }
  export type modulosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | modulos$cursosArgs<ExtArgs>
  }
  export type modulosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | modulos$cursosArgs<ExtArgs>
  }

  export type $modulosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "modulos"
    objects: {
      cursos: Prisma.$cursosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      curso_id: number | null
      titulo: string
      descripcion: string | null
      orden: number
      estado_auditoria: string | null
      fecha_creacion: Date | null
      fecha_actualizacion: Date | null
    }, ExtArgs["result"]["modulos"]>
    composites: {}
  }

  type modulosGetPayload<S extends boolean | null | undefined | modulosDefaultArgs> = $Result.GetResult<Prisma.$modulosPayload, S>

  type modulosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<modulosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ModulosCountAggregateInputType | true
    }

  export interface modulosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['modulos'], meta: { name: 'modulos' } }
    /**
     * Find zero or one Modulos that matches the filter.
     * @param {modulosFindUniqueArgs} args - Arguments to find a Modulos
     * @example
     * // Get one Modulos
     * const modulos = await prisma.modulos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends modulosFindUniqueArgs>(args: SelectSubset<T, modulosFindUniqueArgs<ExtArgs>>): Prisma__modulosClient<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Modulos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {modulosFindUniqueOrThrowArgs} args - Arguments to find a Modulos
     * @example
     * // Get one Modulos
     * const modulos = await prisma.modulos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends modulosFindUniqueOrThrowArgs>(args: SelectSubset<T, modulosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__modulosClient<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Modulos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulosFindFirstArgs} args - Arguments to find a Modulos
     * @example
     * // Get one Modulos
     * const modulos = await prisma.modulos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends modulosFindFirstArgs>(args?: SelectSubset<T, modulosFindFirstArgs<ExtArgs>>): Prisma__modulosClient<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Modulos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulosFindFirstOrThrowArgs} args - Arguments to find a Modulos
     * @example
     * // Get one Modulos
     * const modulos = await prisma.modulos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends modulosFindFirstOrThrowArgs>(args?: SelectSubset<T, modulosFindFirstOrThrowArgs<ExtArgs>>): Prisma__modulosClient<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Modulos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Modulos
     * const modulos = await prisma.modulos.findMany()
     * 
     * // Get first 10 Modulos
     * const modulos = await prisma.modulos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const modulosWithIdOnly = await prisma.modulos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends modulosFindManyArgs>(args?: SelectSubset<T, modulosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Modulos.
     * @param {modulosCreateArgs} args - Arguments to create a Modulos.
     * @example
     * // Create one Modulos
     * const Modulos = await prisma.modulos.create({
     *   data: {
     *     // ... data to create a Modulos
     *   }
     * })
     * 
     */
    create<T extends modulosCreateArgs>(args: SelectSubset<T, modulosCreateArgs<ExtArgs>>): Prisma__modulosClient<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Modulos.
     * @param {modulosCreateManyArgs} args - Arguments to create many Modulos.
     * @example
     * // Create many Modulos
     * const modulos = await prisma.modulos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends modulosCreateManyArgs>(args?: SelectSubset<T, modulosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Modulos and returns the data saved in the database.
     * @param {modulosCreateManyAndReturnArgs} args - Arguments to create many Modulos.
     * @example
     * // Create many Modulos
     * const modulos = await prisma.modulos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Modulos and only return the `id`
     * const modulosWithIdOnly = await prisma.modulos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends modulosCreateManyAndReturnArgs>(args?: SelectSubset<T, modulosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Modulos.
     * @param {modulosDeleteArgs} args - Arguments to delete one Modulos.
     * @example
     * // Delete one Modulos
     * const Modulos = await prisma.modulos.delete({
     *   where: {
     *     // ... filter to delete one Modulos
     *   }
     * })
     * 
     */
    delete<T extends modulosDeleteArgs>(args: SelectSubset<T, modulosDeleteArgs<ExtArgs>>): Prisma__modulosClient<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Modulos.
     * @param {modulosUpdateArgs} args - Arguments to update one Modulos.
     * @example
     * // Update one Modulos
     * const modulos = await prisma.modulos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends modulosUpdateArgs>(args: SelectSubset<T, modulosUpdateArgs<ExtArgs>>): Prisma__modulosClient<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Modulos.
     * @param {modulosDeleteManyArgs} args - Arguments to filter Modulos to delete.
     * @example
     * // Delete a few Modulos
     * const { count } = await prisma.modulos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends modulosDeleteManyArgs>(args?: SelectSubset<T, modulosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Modulos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Modulos
     * const modulos = await prisma.modulos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends modulosUpdateManyArgs>(args: SelectSubset<T, modulosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Modulos and returns the data updated in the database.
     * @param {modulosUpdateManyAndReturnArgs} args - Arguments to update many Modulos.
     * @example
     * // Update many Modulos
     * const modulos = await prisma.modulos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Modulos and only return the `id`
     * const modulosWithIdOnly = await prisma.modulos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends modulosUpdateManyAndReturnArgs>(args: SelectSubset<T, modulosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Modulos.
     * @param {modulosUpsertArgs} args - Arguments to update or create a Modulos.
     * @example
     * // Update or create a Modulos
     * const modulos = await prisma.modulos.upsert({
     *   create: {
     *     // ... data to create a Modulos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Modulos we want to update
     *   }
     * })
     */
    upsert<T extends modulosUpsertArgs>(args: SelectSubset<T, modulosUpsertArgs<ExtArgs>>): Prisma__modulosClient<$Result.GetResult<Prisma.$modulosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Modulos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulosCountArgs} args - Arguments to filter Modulos to count.
     * @example
     * // Count the number of Modulos
     * const count = await prisma.modulos.count({
     *   where: {
     *     // ... the filter for the Modulos we want to count
     *   }
     * })
    **/
    count<T extends modulosCountArgs>(
      args?: Subset<T, modulosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModulosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Modulos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModulosAggregateArgs>(args: Subset<T, ModulosAggregateArgs>): Prisma.PrismaPromise<GetModulosAggregateType<T>>

    /**
     * Group by Modulos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends modulosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: modulosGroupByArgs['orderBy'] }
        : { orderBy?: modulosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, modulosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModulosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the modulos model
   */
  readonly fields: modulosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for modulos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__modulosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cursos<T extends modulos$cursosArgs<ExtArgs> = {}>(args?: Subset<T, modulos$cursosArgs<ExtArgs>>): Prisma__cursosClient<$Result.GetResult<Prisma.$cursosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the modulos model
   */
  interface modulosFieldRefs {
    readonly id: FieldRef<"modulos", 'Int'>
    readonly curso_id: FieldRef<"modulos", 'Int'>
    readonly titulo: FieldRef<"modulos", 'String'>
    readonly descripcion: FieldRef<"modulos", 'String'>
    readonly orden: FieldRef<"modulos", 'Int'>
    readonly estado_auditoria: FieldRef<"modulos", 'String'>
    readonly fecha_creacion: FieldRef<"modulos", 'DateTime'>
    readonly fecha_actualizacion: FieldRef<"modulos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * modulos findUnique
   */
  export type modulosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosInclude<ExtArgs> | null
    /**
     * Filter, which modulos to fetch.
     */
    where: modulosWhereUniqueInput
  }

  /**
   * modulos findUniqueOrThrow
   */
  export type modulosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosInclude<ExtArgs> | null
    /**
     * Filter, which modulos to fetch.
     */
    where: modulosWhereUniqueInput
  }

  /**
   * modulos findFirst
   */
  export type modulosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosInclude<ExtArgs> | null
    /**
     * Filter, which modulos to fetch.
     */
    where?: modulosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modulos to fetch.
     */
    orderBy?: modulosOrderByWithRelationInput | modulosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for modulos.
     */
    cursor?: modulosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modulos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modulos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of modulos.
     */
    distinct?: ModulosScalarFieldEnum | ModulosScalarFieldEnum[]
  }

  /**
   * modulos findFirstOrThrow
   */
  export type modulosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosInclude<ExtArgs> | null
    /**
     * Filter, which modulos to fetch.
     */
    where?: modulosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modulos to fetch.
     */
    orderBy?: modulosOrderByWithRelationInput | modulosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for modulos.
     */
    cursor?: modulosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modulos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modulos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of modulos.
     */
    distinct?: ModulosScalarFieldEnum | ModulosScalarFieldEnum[]
  }

  /**
   * modulos findMany
   */
  export type modulosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosInclude<ExtArgs> | null
    /**
     * Filter, which modulos to fetch.
     */
    where?: modulosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modulos to fetch.
     */
    orderBy?: modulosOrderByWithRelationInput | modulosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing modulos.
     */
    cursor?: modulosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modulos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modulos.
     */
    skip?: number
    distinct?: ModulosScalarFieldEnum | ModulosScalarFieldEnum[]
  }

  /**
   * modulos create
   */
  export type modulosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosInclude<ExtArgs> | null
    /**
     * The data needed to create a modulos.
     */
    data: XOR<modulosCreateInput, modulosUncheckedCreateInput>
  }

  /**
   * modulos createMany
   */
  export type modulosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many modulos.
     */
    data: modulosCreateManyInput | modulosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * modulos createManyAndReturn
   */
  export type modulosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * The data used to create many modulos.
     */
    data: modulosCreateManyInput | modulosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * modulos update
   */
  export type modulosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosInclude<ExtArgs> | null
    /**
     * The data needed to update a modulos.
     */
    data: XOR<modulosUpdateInput, modulosUncheckedUpdateInput>
    /**
     * Choose, which modulos to update.
     */
    where: modulosWhereUniqueInput
  }

  /**
   * modulos updateMany
   */
  export type modulosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update modulos.
     */
    data: XOR<modulosUpdateManyMutationInput, modulosUncheckedUpdateManyInput>
    /**
     * Filter which modulos to update
     */
    where?: modulosWhereInput
    /**
     * Limit how many modulos to update.
     */
    limit?: number
  }

  /**
   * modulos updateManyAndReturn
   */
  export type modulosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * The data used to update modulos.
     */
    data: XOR<modulosUpdateManyMutationInput, modulosUncheckedUpdateManyInput>
    /**
     * Filter which modulos to update
     */
    where?: modulosWhereInput
    /**
     * Limit how many modulos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * modulos upsert
   */
  export type modulosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosInclude<ExtArgs> | null
    /**
     * The filter to search for the modulos to update in case it exists.
     */
    where: modulosWhereUniqueInput
    /**
     * In case the modulos found by the `where` argument doesn't exist, create a new modulos with this data.
     */
    create: XOR<modulosCreateInput, modulosUncheckedCreateInput>
    /**
     * In case the modulos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<modulosUpdateInput, modulosUncheckedUpdateInput>
  }

  /**
   * modulos delete
   */
  export type modulosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosInclude<ExtArgs> | null
    /**
     * Filter which modulos to delete.
     */
    where: modulosWhereUniqueInput
  }

  /**
   * modulos deleteMany
   */
  export type modulosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which modulos to delete
     */
    where?: modulosWhereInput
    /**
     * Limit how many modulos to delete.
     */
    limit?: number
  }

  /**
   * modulos.cursos
   */
  export type modulos$cursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cursos
     */
    select?: cursosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cursos
     */
    omit?: cursosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cursosInclude<ExtArgs> | null
    where?: cursosWhereInput
  }

  /**
   * modulos without action
   */
  export type modulosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulos
     */
    select?: modulosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the modulos
     */
    omit?: modulosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulosInclude<ExtArgs> | null
  }


  /**
   * Model usuarios
   */

  export type AggregateUsuarios = {
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  export type UsuariosAvgAggregateOutputType = {
    id: number | null
  }

  export type UsuariosSumAggregateOutputType = {
    id: number | null
  }

  export type UsuariosMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    email: string | null
    password: string | null
    rol: string | null
    fecha_registro: Date | null
    activo: boolean | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type UsuariosMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    email: string | null
    password: string | null
    rol: string | null
    fecha_registro: Date | null
    activo: boolean | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type UsuariosCountAggregateOutputType = {
    id: number
    nombre: number
    email: number
    password: number
    rol: number
    fecha_registro: number
    activo: number
    estado_auditoria: number
    fecha_creacion: number
    fecha_actualizacion: number
    _all: number
  }


  export type UsuariosAvgAggregateInputType = {
    id?: true
  }

  export type UsuariosSumAggregateInputType = {
    id?: true
  }

  export type UsuariosMinAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    fecha_registro?: true
    activo?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type UsuariosMaxAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    fecha_registro?: true
    activo?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type UsuariosCountAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    fecha_registro?: true
    activo?: true
    estado_auditoria?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
    _all?: true
  }

  export type UsuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to aggregate.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuariosMaxAggregateInputType
  }

  export type GetUsuariosAggregateType<T extends UsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarios[P]>
      : GetScalarType<T[P], AggregateUsuarios[P]>
  }




  export type usuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithAggregationInput | usuariosOrderByWithAggregationInput[]
    by: UsuariosScalarFieldEnum[] | UsuariosScalarFieldEnum
    having?: usuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuariosCountAggregateInputType | true
    _avg?: UsuariosAvgAggregateInputType
    _sum?: UsuariosSumAggregateInputType
    _min?: UsuariosMinAggregateInputType
    _max?: UsuariosMaxAggregateInputType
  }

  export type UsuariosGroupByOutputType = {
    id: number
    nombre: string
    email: string
    password: string
    rol: string | null
    fecha_registro: Date | null
    activo: boolean | null
    estado_auditoria: string | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  type GetUsuariosGroupByPayload<T extends usuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
        }
      >
    >


  export type usuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    fecha_registro?: boolean
    activo?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    inscripciones?: boolean | usuarios$inscripcionesArgs<ExtArgs>
    instructores?: boolean | usuarios$instructoresArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    fecha_registro?: boolean
    activo?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    fecha_registro?: boolean
    activo?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectScalar = {
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    fecha_registro?: boolean
    activo?: boolean
    estado_auditoria?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
  }

  export type usuariosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "email" | "password" | "rol" | "fecha_registro" | "activo" | "estado_auditoria" | "fecha_creacion" | "fecha_actualizacion", ExtArgs["result"]["usuarios"]>
  export type usuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inscripciones?: boolean | usuarios$inscripcionesArgs<ExtArgs>
    instructores?: boolean | usuarios$instructoresArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usuariosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usuariosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuarios"
    objects: {
      inscripciones: Prisma.$inscripcionesPayload<ExtArgs>[]
      instructores: Prisma.$instructoresPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      email: string
      password: string
      rol: string | null
      fecha_registro: Date | null
      activo: boolean | null
      estado_auditoria: string | null
      fecha_creacion: Date | null
      fecha_actualizacion: Date | null
    }, ExtArgs["result"]["usuarios"]>
    composites: {}
  }

  type usuariosGetPayload<S extends boolean | null | undefined | usuariosDefaultArgs> = $Result.GetResult<Prisma.$usuariosPayload, S>

  type usuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usuariosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuariosCountAggregateInputType | true
    }

  export interface usuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuarios'], meta: { name: 'usuarios' } }
    /**
     * Find zero or one Usuarios that matches the filter.
     * @param {usuariosFindUniqueArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuariosFindUniqueArgs>(args: SelectSubset<T, usuariosFindUniqueArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuarios that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usuariosFindUniqueOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, usuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuariosFindFirstArgs>(args?: SelectSubset<T, usuariosFindFirstArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, usuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuarios.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuarios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usuariosFindManyArgs>(args?: SelectSubset<T, usuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuarios.
     * @param {usuariosCreateArgs} args - Arguments to create a Usuarios.
     * @example
     * // Create one Usuarios
     * const Usuarios = await prisma.usuarios.create({
     *   data: {
     *     // ... data to create a Usuarios
     *   }
     * })
     * 
     */
    create<T extends usuariosCreateArgs>(args: SelectSubset<T, usuariosCreateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {usuariosCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuariosCreateManyArgs>(args?: SelectSubset<T, usuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {usuariosCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usuariosCreateManyAndReturnArgs>(args?: SelectSubset<T, usuariosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuarios.
     * @param {usuariosDeleteArgs} args - Arguments to delete one Usuarios.
     * @example
     * // Delete one Usuarios
     * const Usuarios = await prisma.usuarios.delete({
     *   where: {
     *     // ... filter to delete one Usuarios
     *   }
     * })
     * 
     */
    delete<T extends usuariosDeleteArgs>(args: SelectSubset<T, usuariosDeleteArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuarios.
     * @param {usuariosUpdateArgs} args - Arguments to update one Usuarios.
     * @example
     * // Update one Usuarios
     * const usuarios = await prisma.usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuariosUpdateArgs>(args: SelectSubset<T, usuariosUpdateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {usuariosDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuariosDeleteManyArgs>(args?: SelectSubset<T, usuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuariosUpdateManyArgs>(args: SelectSubset<T, usuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {usuariosUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usuariosUpdateManyAndReturnArgs>(args: SelectSubset<T, usuariosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuarios.
     * @param {usuariosUpsertArgs} args - Arguments to update or create a Usuarios.
     * @example
     * // Update or create a Usuarios
     * const usuarios = await prisma.usuarios.upsert({
     *   create: {
     *     // ... data to create a Usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuarios we want to update
     *   }
     * })
     */
    upsert<T extends usuariosUpsertArgs>(args: SelectSubset<T, usuariosUpsertArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuarios.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuariosCountArgs>(
      args?: Subset<T, usuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuariosAggregateArgs>(args: Subset<T, UsuariosAggregateArgs>): Prisma.PrismaPromise<GetUsuariosAggregateType<T>>

    /**
     * Group by Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuariosGroupByArgs['orderBy'] }
        : { orderBy?: usuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuarios model
   */
  readonly fields: usuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inscripciones<T extends usuarios$inscripcionesArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$inscripcionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inscripcionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    instructores<T extends usuarios$instructoresArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$instructoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$instructoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuarios model
   */
  interface usuariosFieldRefs {
    readonly id: FieldRef<"usuarios", 'Int'>
    readonly nombre: FieldRef<"usuarios", 'String'>
    readonly email: FieldRef<"usuarios", 'String'>
    readonly password: FieldRef<"usuarios", 'String'>
    readonly rol: FieldRef<"usuarios", 'String'>
    readonly fecha_registro: FieldRef<"usuarios", 'DateTime'>
    readonly activo: FieldRef<"usuarios", 'Boolean'>
    readonly estado_auditoria: FieldRef<"usuarios", 'String'>
    readonly fecha_creacion: FieldRef<"usuarios", 'DateTime'>
    readonly fecha_actualizacion: FieldRef<"usuarios", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * usuarios findUnique
   */
  export type usuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findUniqueOrThrow
   */
  export type usuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findFirst
   */
  export type usuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findFirstOrThrow
   */
  export type usuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findMany
   */
  export type usuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios create
   */
  export type usuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a usuarios.
     */
    data: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
  }

  /**
   * usuarios createMany
   */
  export type usuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuarios createManyAndReturn
   */
  export type usuariosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuarios update
   */
  export type usuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a usuarios.
     */
    data: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
    /**
     * Choose, which usuarios to update.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios updateMany
   */
  export type usuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuarios updateManyAndReturn
   */
  export type usuariosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuarios upsert
   */
  export type usuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the usuarios to update in case it exists.
     */
    where: usuariosWhereUniqueInput
    /**
     * In case the usuarios found by the `where` argument doesn't exist, create a new usuarios with this data.
     */
    create: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
    /**
     * In case the usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
  }

  /**
   * usuarios delete
   */
  export type usuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter which usuarios to delete.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios deleteMany
   */
  export type usuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to delete.
     */
    limit?: number
  }

  /**
   * usuarios.inscripciones
   */
  export type usuarios$inscripcionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscripciones
     */
    select?: inscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inscripciones
     */
    omit?: inscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inscripcionesInclude<ExtArgs> | null
    where?: inscripcionesWhereInput
    orderBy?: inscripcionesOrderByWithRelationInput | inscripcionesOrderByWithRelationInput[]
    cursor?: inscripcionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InscripcionesScalarFieldEnum | InscripcionesScalarFieldEnum[]
  }

  /**
   * usuarios.instructores
   */
  export type usuarios$instructoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instructores
     */
    select?: instructoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instructores
     */
    omit?: instructoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: instructoresInclude<ExtArgs> | null
    where?: instructoresWhereInput
    orderBy?: instructoresOrderByWithRelationInput | instructoresOrderByWithRelationInput[]
    cursor?: instructoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InstructoresScalarFieldEnum | InstructoresScalarFieldEnum[]
  }

  /**
   * usuarios without action
   */
  export type usuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CategoriasScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    estado_auditoria: 'estado_auditoria',
    fecha_creacion: 'fecha_creacion',
    fecha_actualizacion: 'fecha_actualizacion'
  };

  export type CategoriasScalarFieldEnum = (typeof CategoriasScalarFieldEnum)[keyof typeof CategoriasScalarFieldEnum]


  export const CursosScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    descripcion: 'descripcion',
    precio: 'precio',
    categoria_id: 'categoria_id',
    instructor_id: 'instructor_id',
    duracion_horas: 'duracion_horas',
    nivel: 'nivel',
    fecha_creacion: 'fecha_creacion',
    activo: 'activo',
    estado_auditoria: 'estado_auditoria',
    fecha_actualizacion: 'fecha_actualizacion'
  };

  export type CursosScalarFieldEnum = (typeof CursosScalarFieldEnum)[keyof typeof CursosScalarFieldEnum]


  export const InscripcionesScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    curso_id: 'curso_id',
    fecha_inscripcion: 'fecha_inscripcion',
    progreso: 'progreso',
    completado: 'completado',
    estado_auditoria: 'estado_auditoria',
    fecha_creacion: 'fecha_creacion',
    fecha_actualizacion: 'fecha_actualizacion'
  };

  export type InscripcionesScalarFieldEnum = (typeof InscripcionesScalarFieldEnum)[keyof typeof InscripcionesScalarFieldEnum]


  export const InstructoresScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    biografia: 'biografia',
    foto_url: 'foto_url',
    especialidad: 'especialidad',
    rating: 'rating',
    estado_auditoria: 'estado_auditoria',
    fecha_creacion: 'fecha_creacion',
    fecha_actualizacion: 'fecha_actualizacion'
  };

  export type InstructoresScalarFieldEnum = (typeof InstructoresScalarFieldEnum)[keyof typeof InstructoresScalarFieldEnum]


  export const ModulosScalarFieldEnum: {
    id: 'id',
    curso_id: 'curso_id',
    titulo: 'titulo',
    descripcion: 'descripcion',
    orden: 'orden',
    estado_auditoria: 'estado_auditoria',
    fecha_creacion: 'fecha_creacion',
    fecha_actualizacion: 'fecha_actualizacion'
  };

  export type ModulosScalarFieldEnum = (typeof ModulosScalarFieldEnum)[keyof typeof ModulosScalarFieldEnum]


  export const UsuariosScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    email: 'email',
    password: 'password',
    rol: 'rol',
    fecha_registro: 'fecha_registro',
    activo: 'activo',
    estado_auditoria: 'estado_auditoria',
    fecha_creacion: 'fecha_creacion',
    fecha_actualizacion: 'fecha_actualizacion'
  };

  export type UsuariosScalarFieldEnum = (typeof UsuariosScalarFieldEnum)[keyof typeof UsuariosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type categoriasWhereInput = {
    AND?: categoriasWhereInput | categoriasWhereInput[]
    OR?: categoriasWhereInput[]
    NOT?: categoriasWhereInput | categoriasWhereInput[]
    id?: IntFilter<"categorias"> | number
    nombre?: StringFilter<"categorias"> | string
    descripcion?: StringNullableFilter<"categorias"> | string | null
    estado_auditoria?: StringNullableFilter<"categorias"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"categorias"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"categorias"> | Date | string | null
    cursos?: CursosListRelationFilter
  }

  export type categoriasOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    cursos?: cursosOrderByRelationAggregateInput
  }

  export type categoriasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: categoriasWhereInput | categoriasWhereInput[]
    OR?: categoriasWhereInput[]
    NOT?: categoriasWhereInput | categoriasWhereInput[]
    nombre?: StringFilter<"categorias"> | string
    descripcion?: StringNullableFilter<"categorias"> | string | null
    estado_auditoria?: StringNullableFilter<"categorias"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"categorias"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"categorias"> | Date | string | null
    cursos?: CursosListRelationFilter
  }, "id">

  export type categoriasOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    _count?: categoriasCountOrderByAggregateInput
    _avg?: categoriasAvgOrderByAggregateInput
    _max?: categoriasMaxOrderByAggregateInput
    _min?: categoriasMinOrderByAggregateInput
    _sum?: categoriasSumOrderByAggregateInput
  }

  export type categoriasScalarWhereWithAggregatesInput = {
    AND?: categoriasScalarWhereWithAggregatesInput | categoriasScalarWhereWithAggregatesInput[]
    OR?: categoriasScalarWhereWithAggregatesInput[]
    NOT?: categoriasScalarWhereWithAggregatesInput | categoriasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"categorias"> | number
    nombre?: StringWithAggregatesFilter<"categorias"> | string
    descripcion?: StringNullableWithAggregatesFilter<"categorias"> | string | null
    estado_auditoria?: StringNullableWithAggregatesFilter<"categorias"> | string | null
    fecha_creacion?: DateTimeNullableWithAggregatesFilter<"categorias"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableWithAggregatesFilter<"categorias"> | Date | string | null
  }

  export type cursosWhereInput = {
    AND?: cursosWhereInput | cursosWhereInput[]
    OR?: cursosWhereInput[]
    NOT?: cursosWhereInput | cursosWhereInput[]
    id?: IntFilter<"cursos"> | number
    titulo?: StringFilter<"cursos"> | string
    descripcion?: StringNullableFilter<"cursos"> | string | null
    precio?: DecimalFilter<"cursos"> | Decimal | DecimalJsLike | number | string
    categoria_id?: IntNullableFilter<"cursos"> | number | null
    instructor_id?: IntNullableFilter<"cursos"> | number | null
    duracion_horas?: IntNullableFilter<"cursos"> | number | null
    nivel?: StringNullableFilter<"cursos"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"cursos"> | Date | string | null
    activo?: BoolNullableFilter<"cursos"> | boolean | null
    estado_auditoria?: StringNullableFilter<"cursos"> | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"cursos"> | Date | string | null
    categorias?: XOR<CategoriasNullableScalarRelationFilter, categoriasWhereInput> | null
    instructores?: XOR<InstructoresNullableScalarRelationFilter, instructoresWhereInput> | null
    inscripciones?: InscripcionesListRelationFilter
    modulos?: ModulosListRelationFilter
  }

  export type cursosOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrder
    categoria_id?: SortOrderInput | SortOrder
    instructor_id?: SortOrderInput | SortOrder
    duracion_horas?: SortOrderInput | SortOrder
    nivel?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    activo?: SortOrderInput | SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    categorias?: categoriasOrderByWithRelationInput
    instructores?: instructoresOrderByWithRelationInput
    inscripciones?: inscripcionesOrderByRelationAggregateInput
    modulos?: modulosOrderByRelationAggregateInput
  }

  export type cursosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: cursosWhereInput | cursosWhereInput[]
    OR?: cursosWhereInput[]
    NOT?: cursosWhereInput | cursosWhereInput[]
    titulo?: StringFilter<"cursos"> | string
    descripcion?: StringNullableFilter<"cursos"> | string | null
    precio?: DecimalFilter<"cursos"> | Decimal | DecimalJsLike | number | string
    categoria_id?: IntNullableFilter<"cursos"> | number | null
    instructor_id?: IntNullableFilter<"cursos"> | number | null
    duracion_horas?: IntNullableFilter<"cursos"> | number | null
    nivel?: StringNullableFilter<"cursos"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"cursos"> | Date | string | null
    activo?: BoolNullableFilter<"cursos"> | boolean | null
    estado_auditoria?: StringNullableFilter<"cursos"> | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"cursos"> | Date | string | null
    categorias?: XOR<CategoriasNullableScalarRelationFilter, categoriasWhereInput> | null
    instructores?: XOR<InstructoresNullableScalarRelationFilter, instructoresWhereInput> | null
    inscripciones?: InscripcionesListRelationFilter
    modulos?: ModulosListRelationFilter
  }, "id">

  export type cursosOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrder
    categoria_id?: SortOrderInput | SortOrder
    instructor_id?: SortOrderInput | SortOrder
    duracion_horas?: SortOrderInput | SortOrder
    nivel?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    activo?: SortOrderInput | SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    _count?: cursosCountOrderByAggregateInput
    _avg?: cursosAvgOrderByAggregateInput
    _max?: cursosMaxOrderByAggregateInput
    _min?: cursosMinOrderByAggregateInput
    _sum?: cursosSumOrderByAggregateInput
  }

  export type cursosScalarWhereWithAggregatesInput = {
    AND?: cursosScalarWhereWithAggregatesInput | cursosScalarWhereWithAggregatesInput[]
    OR?: cursosScalarWhereWithAggregatesInput[]
    NOT?: cursosScalarWhereWithAggregatesInput | cursosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"cursos"> | number
    titulo?: StringWithAggregatesFilter<"cursos"> | string
    descripcion?: StringNullableWithAggregatesFilter<"cursos"> | string | null
    precio?: DecimalWithAggregatesFilter<"cursos"> | Decimal | DecimalJsLike | number | string
    categoria_id?: IntNullableWithAggregatesFilter<"cursos"> | number | null
    instructor_id?: IntNullableWithAggregatesFilter<"cursos"> | number | null
    duracion_horas?: IntNullableWithAggregatesFilter<"cursos"> | number | null
    nivel?: StringNullableWithAggregatesFilter<"cursos"> | string | null
    fecha_creacion?: DateTimeNullableWithAggregatesFilter<"cursos"> | Date | string | null
    activo?: BoolNullableWithAggregatesFilter<"cursos"> | boolean | null
    estado_auditoria?: StringNullableWithAggregatesFilter<"cursos"> | string | null
    fecha_actualizacion?: DateTimeNullableWithAggregatesFilter<"cursos"> | Date | string | null
  }

  export type inscripcionesWhereInput = {
    AND?: inscripcionesWhereInput | inscripcionesWhereInput[]
    OR?: inscripcionesWhereInput[]
    NOT?: inscripcionesWhereInput | inscripcionesWhereInput[]
    id?: IntFilter<"inscripciones"> | number
    usuario_id?: IntNullableFilter<"inscripciones"> | number | null
    curso_id?: IntNullableFilter<"inscripciones"> | number | null
    fecha_inscripcion?: DateTimeNullableFilter<"inscripciones"> | Date | string | null
    progreso?: DecimalNullableFilter<"inscripciones"> | Decimal | DecimalJsLike | number | string | null
    completado?: BoolNullableFilter<"inscripciones"> | boolean | null
    estado_auditoria?: StringNullableFilter<"inscripciones"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"inscripciones"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"inscripciones"> | Date | string | null
    cursos?: XOR<CursosNullableScalarRelationFilter, cursosWhereInput> | null
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
  }

  export type inscripcionesOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrderInput | SortOrder
    curso_id?: SortOrderInput | SortOrder
    fecha_inscripcion?: SortOrderInput | SortOrder
    progreso?: SortOrderInput | SortOrder
    completado?: SortOrderInput | SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    cursos?: cursosOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type inscripcionesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: inscripcionesWhereInput | inscripcionesWhereInput[]
    OR?: inscripcionesWhereInput[]
    NOT?: inscripcionesWhereInput | inscripcionesWhereInput[]
    usuario_id?: IntNullableFilter<"inscripciones"> | number | null
    curso_id?: IntNullableFilter<"inscripciones"> | number | null
    fecha_inscripcion?: DateTimeNullableFilter<"inscripciones"> | Date | string | null
    progreso?: DecimalNullableFilter<"inscripciones"> | Decimal | DecimalJsLike | number | string | null
    completado?: BoolNullableFilter<"inscripciones"> | boolean | null
    estado_auditoria?: StringNullableFilter<"inscripciones"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"inscripciones"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"inscripciones"> | Date | string | null
    cursos?: XOR<CursosNullableScalarRelationFilter, cursosWhereInput> | null
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
  }, "id">

  export type inscripcionesOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrderInput | SortOrder
    curso_id?: SortOrderInput | SortOrder
    fecha_inscripcion?: SortOrderInput | SortOrder
    progreso?: SortOrderInput | SortOrder
    completado?: SortOrderInput | SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    _count?: inscripcionesCountOrderByAggregateInput
    _avg?: inscripcionesAvgOrderByAggregateInput
    _max?: inscripcionesMaxOrderByAggregateInput
    _min?: inscripcionesMinOrderByAggregateInput
    _sum?: inscripcionesSumOrderByAggregateInput
  }

  export type inscripcionesScalarWhereWithAggregatesInput = {
    AND?: inscripcionesScalarWhereWithAggregatesInput | inscripcionesScalarWhereWithAggregatesInput[]
    OR?: inscripcionesScalarWhereWithAggregatesInput[]
    NOT?: inscripcionesScalarWhereWithAggregatesInput | inscripcionesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"inscripciones"> | number
    usuario_id?: IntNullableWithAggregatesFilter<"inscripciones"> | number | null
    curso_id?: IntNullableWithAggregatesFilter<"inscripciones"> | number | null
    fecha_inscripcion?: DateTimeNullableWithAggregatesFilter<"inscripciones"> | Date | string | null
    progreso?: DecimalNullableWithAggregatesFilter<"inscripciones"> | Decimal | DecimalJsLike | number | string | null
    completado?: BoolNullableWithAggregatesFilter<"inscripciones"> | boolean | null
    estado_auditoria?: StringNullableWithAggregatesFilter<"inscripciones"> | string | null
    fecha_creacion?: DateTimeNullableWithAggregatesFilter<"inscripciones"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableWithAggregatesFilter<"inscripciones"> | Date | string | null
  }

  export type instructoresWhereInput = {
    AND?: instructoresWhereInput | instructoresWhereInput[]
    OR?: instructoresWhereInput[]
    NOT?: instructoresWhereInput | instructoresWhereInput[]
    id?: IntFilter<"instructores"> | number
    usuario_id?: IntNullableFilter<"instructores"> | number | null
    biografia?: StringNullableFilter<"instructores"> | string | null
    foto_url?: StringNullableFilter<"instructores"> | string | null
    especialidad?: StringNullableFilter<"instructores"> | string | null
    rating?: DecimalNullableFilter<"instructores"> | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: StringNullableFilter<"instructores"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"instructores"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"instructores"> | Date | string | null
    cursos?: CursosListRelationFilter
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
  }

  export type instructoresOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrderInput | SortOrder
    biografia?: SortOrderInput | SortOrder
    foto_url?: SortOrderInput | SortOrder
    especialidad?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    cursos?: cursosOrderByRelationAggregateInput
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type instructoresWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: instructoresWhereInput | instructoresWhereInput[]
    OR?: instructoresWhereInput[]
    NOT?: instructoresWhereInput | instructoresWhereInput[]
    usuario_id?: IntNullableFilter<"instructores"> | number | null
    biografia?: StringNullableFilter<"instructores"> | string | null
    foto_url?: StringNullableFilter<"instructores"> | string | null
    especialidad?: StringNullableFilter<"instructores"> | string | null
    rating?: DecimalNullableFilter<"instructores"> | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: StringNullableFilter<"instructores"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"instructores"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"instructores"> | Date | string | null
    cursos?: CursosListRelationFilter
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
  }, "id">

  export type instructoresOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrderInput | SortOrder
    biografia?: SortOrderInput | SortOrder
    foto_url?: SortOrderInput | SortOrder
    especialidad?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    _count?: instructoresCountOrderByAggregateInput
    _avg?: instructoresAvgOrderByAggregateInput
    _max?: instructoresMaxOrderByAggregateInput
    _min?: instructoresMinOrderByAggregateInput
    _sum?: instructoresSumOrderByAggregateInput
  }

  export type instructoresScalarWhereWithAggregatesInput = {
    AND?: instructoresScalarWhereWithAggregatesInput | instructoresScalarWhereWithAggregatesInput[]
    OR?: instructoresScalarWhereWithAggregatesInput[]
    NOT?: instructoresScalarWhereWithAggregatesInput | instructoresScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"instructores"> | number
    usuario_id?: IntNullableWithAggregatesFilter<"instructores"> | number | null
    biografia?: StringNullableWithAggregatesFilter<"instructores"> | string | null
    foto_url?: StringNullableWithAggregatesFilter<"instructores"> | string | null
    especialidad?: StringNullableWithAggregatesFilter<"instructores"> | string | null
    rating?: DecimalNullableWithAggregatesFilter<"instructores"> | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: StringNullableWithAggregatesFilter<"instructores"> | string | null
    fecha_creacion?: DateTimeNullableWithAggregatesFilter<"instructores"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableWithAggregatesFilter<"instructores"> | Date | string | null
  }

  export type modulosWhereInput = {
    AND?: modulosWhereInput | modulosWhereInput[]
    OR?: modulosWhereInput[]
    NOT?: modulosWhereInput | modulosWhereInput[]
    id?: IntFilter<"modulos"> | number
    curso_id?: IntNullableFilter<"modulos"> | number | null
    titulo?: StringFilter<"modulos"> | string
    descripcion?: StringNullableFilter<"modulos"> | string | null
    orden?: IntFilter<"modulos"> | number
    estado_auditoria?: StringNullableFilter<"modulos"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"modulos"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"modulos"> | Date | string | null
    cursos?: XOR<CursosNullableScalarRelationFilter, cursosWhereInput> | null
  }

  export type modulosOrderByWithRelationInput = {
    id?: SortOrder
    curso_id?: SortOrderInput | SortOrder
    titulo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    orden?: SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    cursos?: cursosOrderByWithRelationInput
  }

  export type modulosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: modulosWhereInput | modulosWhereInput[]
    OR?: modulosWhereInput[]
    NOT?: modulosWhereInput | modulosWhereInput[]
    curso_id?: IntNullableFilter<"modulos"> | number | null
    titulo?: StringFilter<"modulos"> | string
    descripcion?: StringNullableFilter<"modulos"> | string | null
    orden?: IntFilter<"modulos"> | number
    estado_auditoria?: StringNullableFilter<"modulos"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"modulos"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"modulos"> | Date | string | null
    cursos?: XOR<CursosNullableScalarRelationFilter, cursosWhereInput> | null
  }, "id">

  export type modulosOrderByWithAggregationInput = {
    id?: SortOrder
    curso_id?: SortOrderInput | SortOrder
    titulo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    orden?: SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    _count?: modulosCountOrderByAggregateInput
    _avg?: modulosAvgOrderByAggregateInput
    _max?: modulosMaxOrderByAggregateInput
    _min?: modulosMinOrderByAggregateInput
    _sum?: modulosSumOrderByAggregateInput
  }

  export type modulosScalarWhereWithAggregatesInput = {
    AND?: modulosScalarWhereWithAggregatesInput | modulosScalarWhereWithAggregatesInput[]
    OR?: modulosScalarWhereWithAggregatesInput[]
    NOT?: modulosScalarWhereWithAggregatesInput | modulosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"modulos"> | number
    curso_id?: IntNullableWithAggregatesFilter<"modulos"> | number | null
    titulo?: StringWithAggregatesFilter<"modulos"> | string
    descripcion?: StringNullableWithAggregatesFilter<"modulos"> | string | null
    orden?: IntWithAggregatesFilter<"modulos"> | number
    estado_auditoria?: StringNullableWithAggregatesFilter<"modulos"> | string | null
    fecha_creacion?: DateTimeNullableWithAggregatesFilter<"modulos"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableWithAggregatesFilter<"modulos"> | Date | string | null
  }

  export type usuariosWhereInput = {
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    id?: IntFilter<"usuarios"> | number
    nombre?: StringFilter<"usuarios"> | string
    email?: StringFilter<"usuarios"> | string
    password?: StringFilter<"usuarios"> | string
    rol?: StringNullableFilter<"usuarios"> | string | null
    fecha_registro?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    activo?: BoolNullableFilter<"usuarios"> | boolean | null
    estado_auditoria?: StringNullableFilter<"usuarios"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    inscripciones?: InscripcionesListRelationFilter
    instructores?: InstructoresListRelationFilter
  }

  export type usuariosOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    activo?: SortOrderInput | SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    inscripciones?: inscripcionesOrderByRelationAggregateInput
    instructores?: instructoresOrderByRelationAggregateInput
  }

  export type usuariosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    nombre?: StringFilter<"usuarios"> | string
    password?: StringFilter<"usuarios"> | string
    rol?: StringNullableFilter<"usuarios"> | string | null
    fecha_registro?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    activo?: BoolNullableFilter<"usuarios"> | boolean | null
    estado_auditoria?: StringNullableFilter<"usuarios"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    inscripciones?: InscripcionesListRelationFilter
    instructores?: InstructoresListRelationFilter
  }, "id" | "email">

  export type usuariosOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    activo?: SortOrderInput | SortOrder
    estado_auditoria?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    _count?: usuariosCountOrderByAggregateInput
    _avg?: usuariosAvgOrderByAggregateInput
    _max?: usuariosMaxOrderByAggregateInput
    _min?: usuariosMinOrderByAggregateInput
    _sum?: usuariosSumOrderByAggregateInput
  }

  export type usuariosScalarWhereWithAggregatesInput = {
    AND?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    OR?: usuariosScalarWhereWithAggregatesInput[]
    NOT?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"usuarios"> | number
    nombre?: StringWithAggregatesFilter<"usuarios"> | string
    email?: StringWithAggregatesFilter<"usuarios"> | string
    password?: StringWithAggregatesFilter<"usuarios"> | string
    rol?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    fecha_registro?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
    activo?: BoolNullableWithAggregatesFilter<"usuarios"> | boolean | null
    estado_auditoria?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    fecha_creacion?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
  }

  export type categoriasCreateInput = {
    nombre: string
    descripcion?: string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    cursos?: cursosCreateNestedManyWithoutCategoriasInput
  }

  export type categoriasUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    cursos?: cursosUncheckedCreateNestedManyWithoutCategoriasInput
  }

  export type categoriasUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cursos?: cursosUpdateManyWithoutCategoriasNestedInput
  }

  export type categoriasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cursos?: cursosUncheckedUpdateManyWithoutCategoriasNestedInput
  }

  export type categoriasCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type categoriasUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type categoriasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type cursosCreateInput = {
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
    categorias?: categoriasCreateNestedOneWithoutCursosInput
    instructores?: instructoresCreateNestedOneWithoutCursosInput
    inscripciones?: inscripcionesCreateNestedManyWithoutCursosInput
    modulos?: modulosCreateNestedManyWithoutCursosInput
  }

  export type cursosUncheckedCreateInput = {
    id?: number
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    categoria_id?: number | null
    instructor_id?: number | null
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
    inscripciones?: inscripcionesUncheckedCreateNestedManyWithoutCursosInput
    modulos?: modulosUncheckedCreateNestedManyWithoutCursosInput
  }

  export type cursosUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categorias?: categoriasUpdateOneWithoutCursosNestedInput
    instructores?: instructoresUpdateOneWithoutCursosNestedInput
    inscripciones?: inscripcionesUpdateManyWithoutCursosNestedInput
    modulos?: modulosUpdateManyWithoutCursosNestedInput
  }

  export type cursosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    categoria_id?: NullableIntFieldUpdateOperationsInput | number | null
    instructor_id?: NullableIntFieldUpdateOperationsInput | number | null
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inscripciones?: inscripcionesUncheckedUpdateManyWithoutCursosNestedInput
    modulos?: modulosUncheckedUpdateManyWithoutCursosNestedInput
  }

  export type cursosCreateManyInput = {
    id?: number
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    categoria_id?: number | null
    instructor_id?: number | null
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
  }

  export type cursosUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type cursosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    categoria_id?: NullableIntFieldUpdateOperationsInput | number | null
    instructor_id?: NullableIntFieldUpdateOperationsInput | number | null
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inscripcionesCreateInput = {
    fecha_inscripcion?: Date | string | null
    progreso?: Decimal | DecimalJsLike | number | string | null
    completado?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    cursos?: cursosCreateNestedOneWithoutInscripcionesInput
    usuarios?: usuariosCreateNestedOneWithoutInscripcionesInput
  }

  export type inscripcionesUncheckedCreateInput = {
    id?: number
    usuario_id?: number | null
    curso_id?: number | null
    fecha_inscripcion?: Date | string | null
    progreso?: Decimal | DecimalJsLike | number | string | null
    completado?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type inscripcionesUpdateInput = {
    fecha_inscripcion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    completado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cursos?: cursosUpdateOneWithoutInscripcionesNestedInput
    usuarios?: usuariosUpdateOneWithoutInscripcionesNestedInput
  }

  export type inscripcionesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    curso_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    completado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inscripcionesCreateManyInput = {
    id?: number
    usuario_id?: number | null
    curso_id?: number | null
    fecha_inscripcion?: Date | string | null
    progreso?: Decimal | DecimalJsLike | number | string | null
    completado?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type inscripcionesUpdateManyMutationInput = {
    fecha_inscripcion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    completado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inscripcionesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    curso_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    completado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instructoresCreateInput = {
    biografia?: string | null
    foto_url?: string | null
    especialidad?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    cursos?: cursosCreateNestedManyWithoutInstructoresInput
    usuarios?: usuariosCreateNestedOneWithoutInstructoresInput
  }

  export type instructoresUncheckedCreateInput = {
    id?: number
    usuario_id?: number | null
    biografia?: string | null
    foto_url?: string | null
    especialidad?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    cursos?: cursosUncheckedCreateNestedManyWithoutInstructoresInput
  }

  export type instructoresUpdateInput = {
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    foto_url?: NullableStringFieldUpdateOperationsInput | string | null
    especialidad?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cursos?: cursosUpdateManyWithoutInstructoresNestedInput
    usuarios?: usuariosUpdateOneWithoutInstructoresNestedInput
  }

  export type instructoresUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    foto_url?: NullableStringFieldUpdateOperationsInput | string | null
    especialidad?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cursos?: cursosUncheckedUpdateManyWithoutInstructoresNestedInput
  }

  export type instructoresCreateManyInput = {
    id?: number
    usuario_id?: number | null
    biografia?: string | null
    foto_url?: string | null
    especialidad?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type instructoresUpdateManyMutationInput = {
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    foto_url?: NullableStringFieldUpdateOperationsInput | string | null
    especialidad?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instructoresUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    foto_url?: NullableStringFieldUpdateOperationsInput | string | null
    especialidad?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type modulosCreateInput = {
    titulo: string
    descripcion?: string | null
    orden: number
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    cursos?: cursosCreateNestedOneWithoutModulosInput
  }

  export type modulosUncheckedCreateInput = {
    id?: number
    curso_id?: number | null
    titulo: string
    descripcion?: string | null
    orden: number
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type modulosUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: IntFieldUpdateOperationsInput | number
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cursos?: cursosUpdateOneWithoutModulosNestedInput
  }

  export type modulosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    curso_id?: NullableIntFieldUpdateOperationsInput | number | null
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: IntFieldUpdateOperationsInput | number
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type modulosCreateManyInput = {
    id?: number
    curso_id?: number | null
    titulo: string
    descripcion?: string | null
    orden: number
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type modulosUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: IntFieldUpdateOperationsInput | number
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type modulosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    curso_id?: NullableIntFieldUpdateOperationsInput | number | null
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: IntFieldUpdateOperationsInput | number
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosCreateInput = {
    nombre: string
    email: string
    password: string
    rol?: string | null
    fecha_registro?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    inscripciones?: inscripcionesCreateNestedManyWithoutUsuariosInput
    instructores?: instructoresCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateInput = {
    id?: number
    nombre: string
    email: string
    password: string
    rol?: string | null
    fecha_registro?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    inscripciones?: inscripcionesUncheckedCreateNestedManyWithoutUsuariosInput
    instructores?: instructoresUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inscripciones?: inscripcionesUpdateManyWithoutUsuariosNestedInput
    instructores?: instructoresUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inscripciones?: inscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput
    instructores?: instructoresUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosCreateManyInput = {
    id?: number
    nombre: string
    email: string
    password: string
    rol?: string | null
    fecha_registro?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type usuariosUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type CursosListRelationFilter = {
    every?: cursosWhereInput
    some?: cursosWhereInput
    none?: cursosWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type cursosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type categoriasCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type categoriasAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type categoriasMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type categoriasMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type categoriasSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type CategoriasNullableScalarRelationFilter = {
    is?: categoriasWhereInput | null
    isNot?: categoriasWhereInput | null
  }

  export type InstructoresNullableScalarRelationFilter = {
    is?: instructoresWhereInput | null
    isNot?: instructoresWhereInput | null
  }

  export type InscripcionesListRelationFilter = {
    every?: inscripcionesWhereInput
    some?: inscripcionesWhereInput
    none?: inscripcionesWhereInput
  }

  export type ModulosListRelationFilter = {
    every?: modulosWhereInput
    some?: modulosWhereInput
    none?: modulosWhereInput
  }

  export type inscripcionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type modulosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cursosCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    categoria_id?: SortOrder
    instructor_id?: SortOrder
    duracion_horas?: SortOrder
    nivel?: SortOrder
    fecha_creacion?: SortOrder
    activo?: SortOrder
    estado_auditoria?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type cursosAvgOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    categoria_id?: SortOrder
    instructor_id?: SortOrder
    duracion_horas?: SortOrder
  }

  export type cursosMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    categoria_id?: SortOrder
    instructor_id?: SortOrder
    duracion_horas?: SortOrder
    nivel?: SortOrder
    fecha_creacion?: SortOrder
    activo?: SortOrder
    estado_auditoria?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type cursosMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    categoria_id?: SortOrder
    instructor_id?: SortOrder
    duracion_horas?: SortOrder
    nivel?: SortOrder
    fecha_creacion?: SortOrder
    activo?: SortOrder
    estado_auditoria?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type cursosSumOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    categoria_id?: SortOrder
    instructor_id?: SortOrder
    duracion_horas?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type CursosNullableScalarRelationFilter = {
    is?: cursosWhereInput | null
    isNot?: cursosWhereInput | null
  }

  export type UsuariosNullableScalarRelationFilter = {
    is?: usuariosWhereInput | null
    isNot?: usuariosWhereInput | null
  }

  export type inscripcionesCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    curso_id?: SortOrder
    fecha_inscripcion?: SortOrder
    progreso?: SortOrder
    completado?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type inscripcionesAvgOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    curso_id?: SortOrder
    progreso?: SortOrder
  }

  export type inscripcionesMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    curso_id?: SortOrder
    fecha_inscripcion?: SortOrder
    progreso?: SortOrder
    completado?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type inscripcionesMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    curso_id?: SortOrder
    fecha_inscripcion?: SortOrder
    progreso?: SortOrder
    completado?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type inscripcionesSumOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    curso_id?: SortOrder
    progreso?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type instructoresCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    biografia?: SortOrder
    foto_url?: SortOrder
    especialidad?: SortOrder
    rating?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type instructoresAvgOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    rating?: SortOrder
  }

  export type instructoresMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    biografia?: SortOrder
    foto_url?: SortOrder
    especialidad?: SortOrder
    rating?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type instructoresMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    biografia?: SortOrder
    foto_url?: SortOrder
    especialidad?: SortOrder
    rating?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type instructoresSumOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    rating?: SortOrder
  }

  export type modulosCountOrderByAggregateInput = {
    id?: SortOrder
    curso_id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    orden?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type modulosAvgOrderByAggregateInput = {
    id?: SortOrder
    curso_id?: SortOrder
    orden?: SortOrder
  }

  export type modulosMaxOrderByAggregateInput = {
    id?: SortOrder
    curso_id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    orden?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type modulosMinOrderByAggregateInput = {
    id?: SortOrder
    curso_id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    orden?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type modulosSumOrderByAggregateInput = {
    id?: SortOrder
    curso_id?: SortOrder
    orden?: SortOrder
  }

  export type InstructoresListRelationFilter = {
    every?: instructoresWhereInput
    some?: instructoresWhereInput
    none?: instructoresWhereInput
  }

  export type instructoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usuariosCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    fecha_registro?: SortOrder
    activo?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type usuariosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type usuariosMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    fecha_registro?: SortOrder
    activo?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type usuariosMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    fecha_registro?: SortOrder
    activo?: SortOrder
    estado_auditoria?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type usuariosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type cursosCreateNestedManyWithoutCategoriasInput = {
    create?: XOR<cursosCreateWithoutCategoriasInput, cursosUncheckedCreateWithoutCategoriasInput> | cursosCreateWithoutCategoriasInput[] | cursosUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: cursosCreateOrConnectWithoutCategoriasInput | cursosCreateOrConnectWithoutCategoriasInput[]
    createMany?: cursosCreateManyCategoriasInputEnvelope
    connect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
  }

  export type cursosUncheckedCreateNestedManyWithoutCategoriasInput = {
    create?: XOR<cursosCreateWithoutCategoriasInput, cursosUncheckedCreateWithoutCategoriasInput> | cursosCreateWithoutCategoriasInput[] | cursosUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: cursosCreateOrConnectWithoutCategoriasInput | cursosCreateOrConnectWithoutCategoriasInput[]
    createMany?: cursosCreateManyCategoriasInputEnvelope
    connect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type cursosUpdateManyWithoutCategoriasNestedInput = {
    create?: XOR<cursosCreateWithoutCategoriasInput, cursosUncheckedCreateWithoutCategoriasInput> | cursosCreateWithoutCategoriasInput[] | cursosUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: cursosCreateOrConnectWithoutCategoriasInput | cursosCreateOrConnectWithoutCategoriasInput[]
    upsert?: cursosUpsertWithWhereUniqueWithoutCategoriasInput | cursosUpsertWithWhereUniqueWithoutCategoriasInput[]
    createMany?: cursosCreateManyCategoriasInputEnvelope
    set?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    disconnect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    delete?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    connect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    update?: cursosUpdateWithWhereUniqueWithoutCategoriasInput | cursosUpdateWithWhereUniqueWithoutCategoriasInput[]
    updateMany?: cursosUpdateManyWithWhereWithoutCategoriasInput | cursosUpdateManyWithWhereWithoutCategoriasInput[]
    deleteMany?: cursosScalarWhereInput | cursosScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type cursosUncheckedUpdateManyWithoutCategoriasNestedInput = {
    create?: XOR<cursosCreateWithoutCategoriasInput, cursosUncheckedCreateWithoutCategoriasInput> | cursosCreateWithoutCategoriasInput[] | cursosUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: cursosCreateOrConnectWithoutCategoriasInput | cursosCreateOrConnectWithoutCategoriasInput[]
    upsert?: cursosUpsertWithWhereUniqueWithoutCategoriasInput | cursosUpsertWithWhereUniqueWithoutCategoriasInput[]
    createMany?: cursosCreateManyCategoriasInputEnvelope
    set?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    disconnect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    delete?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    connect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    update?: cursosUpdateWithWhereUniqueWithoutCategoriasInput | cursosUpdateWithWhereUniqueWithoutCategoriasInput[]
    updateMany?: cursosUpdateManyWithWhereWithoutCategoriasInput | cursosUpdateManyWithWhereWithoutCategoriasInput[]
    deleteMany?: cursosScalarWhereInput | cursosScalarWhereInput[]
  }

  export type categoriasCreateNestedOneWithoutCursosInput = {
    create?: XOR<categoriasCreateWithoutCursosInput, categoriasUncheckedCreateWithoutCursosInput>
    connectOrCreate?: categoriasCreateOrConnectWithoutCursosInput
    connect?: categoriasWhereUniqueInput
  }

  export type instructoresCreateNestedOneWithoutCursosInput = {
    create?: XOR<instructoresCreateWithoutCursosInput, instructoresUncheckedCreateWithoutCursosInput>
    connectOrCreate?: instructoresCreateOrConnectWithoutCursosInput
    connect?: instructoresWhereUniqueInput
  }

  export type inscripcionesCreateNestedManyWithoutCursosInput = {
    create?: XOR<inscripcionesCreateWithoutCursosInput, inscripcionesUncheckedCreateWithoutCursosInput> | inscripcionesCreateWithoutCursosInput[] | inscripcionesUncheckedCreateWithoutCursosInput[]
    connectOrCreate?: inscripcionesCreateOrConnectWithoutCursosInput | inscripcionesCreateOrConnectWithoutCursosInput[]
    createMany?: inscripcionesCreateManyCursosInputEnvelope
    connect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
  }

  export type modulosCreateNestedManyWithoutCursosInput = {
    create?: XOR<modulosCreateWithoutCursosInput, modulosUncheckedCreateWithoutCursosInput> | modulosCreateWithoutCursosInput[] | modulosUncheckedCreateWithoutCursosInput[]
    connectOrCreate?: modulosCreateOrConnectWithoutCursosInput | modulosCreateOrConnectWithoutCursosInput[]
    createMany?: modulosCreateManyCursosInputEnvelope
    connect?: modulosWhereUniqueInput | modulosWhereUniqueInput[]
  }

  export type inscripcionesUncheckedCreateNestedManyWithoutCursosInput = {
    create?: XOR<inscripcionesCreateWithoutCursosInput, inscripcionesUncheckedCreateWithoutCursosInput> | inscripcionesCreateWithoutCursosInput[] | inscripcionesUncheckedCreateWithoutCursosInput[]
    connectOrCreate?: inscripcionesCreateOrConnectWithoutCursosInput | inscripcionesCreateOrConnectWithoutCursosInput[]
    createMany?: inscripcionesCreateManyCursosInputEnvelope
    connect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
  }

  export type modulosUncheckedCreateNestedManyWithoutCursosInput = {
    create?: XOR<modulosCreateWithoutCursosInput, modulosUncheckedCreateWithoutCursosInput> | modulosCreateWithoutCursosInput[] | modulosUncheckedCreateWithoutCursosInput[]
    connectOrCreate?: modulosCreateOrConnectWithoutCursosInput | modulosCreateOrConnectWithoutCursosInput[]
    createMany?: modulosCreateManyCursosInputEnvelope
    connect?: modulosWhereUniqueInput | modulosWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type categoriasUpdateOneWithoutCursosNestedInput = {
    create?: XOR<categoriasCreateWithoutCursosInput, categoriasUncheckedCreateWithoutCursosInput>
    connectOrCreate?: categoriasCreateOrConnectWithoutCursosInput
    upsert?: categoriasUpsertWithoutCursosInput
    disconnect?: categoriasWhereInput | boolean
    delete?: categoriasWhereInput | boolean
    connect?: categoriasWhereUniqueInput
    update?: XOR<XOR<categoriasUpdateToOneWithWhereWithoutCursosInput, categoriasUpdateWithoutCursosInput>, categoriasUncheckedUpdateWithoutCursosInput>
  }

  export type instructoresUpdateOneWithoutCursosNestedInput = {
    create?: XOR<instructoresCreateWithoutCursosInput, instructoresUncheckedCreateWithoutCursosInput>
    connectOrCreate?: instructoresCreateOrConnectWithoutCursosInput
    upsert?: instructoresUpsertWithoutCursosInput
    disconnect?: instructoresWhereInput | boolean
    delete?: instructoresWhereInput | boolean
    connect?: instructoresWhereUniqueInput
    update?: XOR<XOR<instructoresUpdateToOneWithWhereWithoutCursosInput, instructoresUpdateWithoutCursosInput>, instructoresUncheckedUpdateWithoutCursosInput>
  }

  export type inscripcionesUpdateManyWithoutCursosNestedInput = {
    create?: XOR<inscripcionesCreateWithoutCursosInput, inscripcionesUncheckedCreateWithoutCursosInput> | inscripcionesCreateWithoutCursosInput[] | inscripcionesUncheckedCreateWithoutCursosInput[]
    connectOrCreate?: inscripcionesCreateOrConnectWithoutCursosInput | inscripcionesCreateOrConnectWithoutCursosInput[]
    upsert?: inscripcionesUpsertWithWhereUniqueWithoutCursosInput | inscripcionesUpsertWithWhereUniqueWithoutCursosInput[]
    createMany?: inscripcionesCreateManyCursosInputEnvelope
    set?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    disconnect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    delete?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    connect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    update?: inscripcionesUpdateWithWhereUniqueWithoutCursosInput | inscripcionesUpdateWithWhereUniqueWithoutCursosInput[]
    updateMany?: inscripcionesUpdateManyWithWhereWithoutCursosInput | inscripcionesUpdateManyWithWhereWithoutCursosInput[]
    deleteMany?: inscripcionesScalarWhereInput | inscripcionesScalarWhereInput[]
  }

  export type modulosUpdateManyWithoutCursosNestedInput = {
    create?: XOR<modulosCreateWithoutCursosInput, modulosUncheckedCreateWithoutCursosInput> | modulosCreateWithoutCursosInput[] | modulosUncheckedCreateWithoutCursosInput[]
    connectOrCreate?: modulosCreateOrConnectWithoutCursosInput | modulosCreateOrConnectWithoutCursosInput[]
    upsert?: modulosUpsertWithWhereUniqueWithoutCursosInput | modulosUpsertWithWhereUniqueWithoutCursosInput[]
    createMany?: modulosCreateManyCursosInputEnvelope
    set?: modulosWhereUniqueInput | modulosWhereUniqueInput[]
    disconnect?: modulosWhereUniqueInput | modulosWhereUniqueInput[]
    delete?: modulosWhereUniqueInput | modulosWhereUniqueInput[]
    connect?: modulosWhereUniqueInput | modulosWhereUniqueInput[]
    update?: modulosUpdateWithWhereUniqueWithoutCursosInput | modulosUpdateWithWhereUniqueWithoutCursosInput[]
    updateMany?: modulosUpdateManyWithWhereWithoutCursosInput | modulosUpdateManyWithWhereWithoutCursosInput[]
    deleteMany?: modulosScalarWhereInput | modulosScalarWhereInput[]
  }

  export type inscripcionesUncheckedUpdateManyWithoutCursosNestedInput = {
    create?: XOR<inscripcionesCreateWithoutCursosInput, inscripcionesUncheckedCreateWithoutCursosInput> | inscripcionesCreateWithoutCursosInput[] | inscripcionesUncheckedCreateWithoutCursosInput[]
    connectOrCreate?: inscripcionesCreateOrConnectWithoutCursosInput | inscripcionesCreateOrConnectWithoutCursosInput[]
    upsert?: inscripcionesUpsertWithWhereUniqueWithoutCursosInput | inscripcionesUpsertWithWhereUniqueWithoutCursosInput[]
    createMany?: inscripcionesCreateManyCursosInputEnvelope
    set?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    disconnect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    delete?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    connect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    update?: inscripcionesUpdateWithWhereUniqueWithoutCursosInput | inscripcionesUpdateWithWhereUniqueWithoutCursosInput[]
    updateMany?: inscripcionesUpdateManyWithWhereWithoutCursosInput | inscripcionesUpdateManyWithWhereWithoutCursosInput[]
    deleteMany?: inscripcionesScalarWhereInput | inscripcionesScalarWhereInput[]
  }

  export type modulosUncheckedUpdateManyWithoutCursosNestedInput = {
    create?: XOR<modulosCreateWithoutCursosInput, modulosUncheckedCreateWithoutCursosInput> | modulosCreateWithoutCursosInput[] | modulosUncheckedCreateWithoutCursosInput[]
    connectOrCreate?: modulosCreateOrConnectWithoutCursosInput | modulosCreateOrConnectWithoutCursosInput[]
    upsert?: modulosUpsertWithWhereUniqueWithoutCursosInput | modulosUpsertWithWhereUniqueWithoutCursosInput[]
    createMany?: modulosCreateManyCursosInputEnvelope
    set?: modulosWhereUniqueInput | modulosWhereUniqueInput[]
    disconnect?: modulosWhereUniqueInput | modulosWhereUniqueInput[]
    delete?: modulosWhereUniqueInput | modulosWhereUniqueInput[]
    connect?: modulosWhereUniqueInput | modulosWhereUniqueInput[]
    update?: modulosUpdateWithWhereUniqueWithoutCursosInput | modulosUpdateWithWhereUniqueWithoutCursosInput[]
    updateMany?: modulosUpdateManyWithWhereWithoutCursosInput | modulosUpdateManyWithWhereWithoutCursosInput[]
    deleteMany?: modulosScalarWhereInput | modulosScalarWhereInput[]
  }

  export type cursosCreateNestedOneWithoutInscripcionesInput = {
    create?: XOR<cursosCreateWithoutInscripcionesInput, cursosUncheckedCreateWithoutInscripcionesInput>
    connectOrCreate?: cursosCreateOrConnectWithoutInscripcionesInput
    connect?: cursosWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutInscripcionesInput = {
    create?: XOR<usuariosCreateWithoutInscripcionesInput, usuariosUncheckedCreateWithoutInscripcionesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutInscripcionesInput
    connect?: usuariosWhereUniqueInput
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type cursosUpdateOneWithoutInscripcionesNestedInput = {
    create?: XOR<cursosCreateWithoutInscripcionesInput, cursosUncheckedCreateWithoutInscripcionesInput>
    connectOrCreate?: cursosCreateOrConnectWithoutInscripcionesInput
    upsert?: cursosUpsertWithoutInscripcionesInput
    disconnect?: cursosWhereInput | boolean
    delete?: cursosWhereInput | boolean
    connect?: cursosWhereUniqueInput
    update?: XOR<XOR<cursosUpdateToOneWithWhereWithoutInscripcionesInput, cursosUpdateWithoutInscripcionesInput>, cursosUncheckedUpdateWithoutInscripcionesInput>
  }

  export type usuariosUpdateOneWithoutInscripcionesNestedInput = {
    create?: XOR<usuariosCreateWithoutInscripcionesInput, usuariosUncheckedCreateWithoutInscripcionesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutInscripcionesInput
    upsert?: usuariosUpsertWithoutInscripcionesInput
    disconnect?: usuariosWhereInput | boolean
    delete?: usuariosWhereInput | boolean
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutInscripcionesInput, usuariosUpdateWithoutInscripcionesInput>, usuariosUncheckedUpdateWithoutInscripcionesInput>
  }

  export type cursosCreateNestedManyWithoutInstructoresInput = {
    create?: XOR<cursosCreateWithoutInstructoresInput, cursosUncheckedCreateWithoutInstructoresInput> | cursosCreateWithoutInstructoresInput[] | cursosUncheckedCreateWithoutInstructoresInput[]
    connectOrCreate?: cursosCreateOrConnectWithoutInstructoresInput | cursosCreateOrConnectWithoutInstructoresInput[]
    createMany?: cursosCreateManyInstructoresInputEnvelope
    connect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
  }

  export type usuariosCreateNestedOneWithoutInstructoresInput = {
    create?: XOR<usuariosCreateWithoutInstructoresInput, usuariosUncheckedCreateWithoutInstructoresInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutInstructoresInput
    connect?: usuariosWhereUniqueInput
  }

  export type cursosUncheckedCreateNestedManyWithoutInstructoresInput = {
    create?: XOR<cursosCreateWithoutInstructoresInput, cursosUncheckedCreateWithoutInstructoresInput> | cursosCreateWithoutInstructoresInput[] | cursosUncheckedCreateWithoutInstructoresInput[]
    connectOrCreate?: cursosCreateOrConnectWithoutInstructoresInput | cursosCreateOrConnectWithoutInstructoresInput[]
    createMany?: cursosCreateManyInstructoresInputEnvelope
    connect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
  }

  export type cursosUpdateManyWithoutInstructoresNestedInput = {
    create?: XOR<cursosCreateWithoutInstructoresInput, cursosUncheckedCreateWithoutInstructoresInput> | cursosCreateWithoutInstructoresInput[] | cursosUncheckedCreateWithoutInstructoresInput[]
    connectOrCreate?: cursosCreateOrConnectWithoutInstructoresInput | cursosCreateOrConnectWithoutInstructoresInput[]
    upsert?: cursosUpsertWithWhereUniqueWithoutInstructoresInput | cursosUpsertWithWhereUniqueWithoutInstructoresInput[]
    createMany?: cursosCreateManyInstructoresInputEnvelope
    set?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    disconnect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    delete?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    connect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    update?: cursosUpdateWithWhereUniqueWithoutInstructoresInput | cursosUpdateWithWhereUniqueWithoutInstructoresInput[]
    updateMany?: cursosUpdateManyWithWhereWithoutInstructoresInput | cursosUpdateManyWithWhereWithoutInstructoresInput[]
    deleteMany?: cursosScalarWhereInput | cursosScalarWhereInput[]
  }

  export type usuariosUpdateOneWithoutInstructoresNestedInput = {
    create?: XOR<usuariosCreateWithoutInstructoresInput, usuariosUncheckedCreateWithoutInstructoresInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutInstructoresInput
    upsert?: usuariosUpsertWithoutInstructoresInput
    disconnect?: usuariosWhereInput | boolean
    delete?: usuariosWhereInput | boolean
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutInstructoresInput, usuariosUpdateWithoutInstructoresInput>, usuariosUncheckedUpdateWithoutInstructoresInput>
  }

  export type cursosUncheckedUpdateManyWithoutInstructoresNestedInput = {
    create?: XOR<cursosCreateWithoutInstructoresInput, cursosUncheckedCreateWithoutInstructoresInput> | cursosCreateWithoutInstructoresInput[] | cursosUncheckedCreateWithoutInstructoresInput[]
    connectOrCreate?: cursosCreateOrConnectWithoutInstructoresInput | cursosCreateOrConnectWithoutInstructoresInput[]
    upsert?: cursosUpsertWithWhereUniqueWithoutInstructoresInput | cursosUpsertWithWhereUniqueWithoutInstructoresInput[]
    createMany?: cursosCreateManyInstructoresInputEnvelope
    set?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    disconnect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    delete?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    connect?: cursosWhereUniqueInput | cursosWhereUniqueInput[]
    update?: cursosUpdateWithWhereUniqueWithoutInstructoresInput | cursosUpdateWithWhereUniqueWithoutInstructoresInput[]
    updateMany?: cursosUpdateManyWithWhereWithoutInstructoresInput | cursosUpdateManyWithWhereWithoutInstructoresInput[]
    deleteMany?: cursosScalarWhereInput | cursosScalarWhereInput[]
  }

  export type cursosCreateNestedOneWithoutModulosInput = {
    create?: XOR<cursosCreateWithoutModulosInput, cursosUncheckedCreateWithoutModulosInput>
    connectOrCreate?: cursosCreateOrConnectWithoutModulosInput
    connect?: cursosWhereUniqueInput
  }

  export type cursosUpdateOneWithoutModulosNestedInput = {
    create?: XOR<cursosCreateWithoutModulosInput, cursosUncheckedCreateWithoutModulosInput>
    connectOrCreate?: cursosCreateOrConnectWithoutModulosInput
    upsert?: cursosUpsertWithoutModulosInput
    disconnect?: cursosWhereInput | boolean
    delete?: cursosWhereInput | boolean
    connect?: cursosWhereUniqueInput
    update?: XOR<XOR<cursosUpdateToOneWithWhereWithoutModulosInput, cursosUpdateWithoutModulosInput>, cursosUncheckedUpdateWithoutModulosInput>
  }

  export type inscripcionesCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<inscripcionesCreateWithoutUsuariosInput, inscripcionesUncheckedCreateWithoutUsuariosInput> | inscripcionesCreateWithoutUsuariosInput[] | inscripcionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: inscripcionesCreateOrConnectWithoutUsuariosInput | inscripcionesCreateOrConnectWithoutUsuariosInput[]
    createMany?: inscripcionesCreateManyUsuariosInputEnvelope
    connect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
  }

  export type instructoresCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<instructoresCreateWithoutUsuariosInput, instructoresUncheckedCreateWithoutUsuariosInput> | instructoresCreateWithoutUsuariosInput[] | instructoresUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: instructoresCreateOrConnectWithoutUsuariosInput | instructoresCreateOrConnectWithoutUsuariosInput[]
    createMany?: instructoresCreateManyUsuariosInputEnvelope
    connect?: instructoresWhereUniqueInput | instructoresWhereUniqueInput[]
  }

  export type inscripcionesUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<inscripcionesCreateWithoutUsuariosInput, inscripcionesUncheckedCreateWithoutUsuariosInput> | inscripcionesCreateWithoutUsuariosInput[] | inscripcionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: inscripcionesCreateOrConnectWithoutUsuariosInput | inscripcionesCreateOrConnectWithoutUsuariosInput[]
    createMany?: inscripcionesCreateManyUsuariosInputEnvelope
    connect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
  }

  export type instructoresUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<instructoresCreateWithoutUsuariosInput, instructoresUncheckedCreateWithoutUsuariosInput> | instructoresCreateWithoutUsuariosInput[] | instructoresUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: instructoresCreateOrConnectWithoutUsuariosInput | instructoresCreateOrConnectWithoutUsuariosInput[]
    createMany?: instructoresCreateManyUsuariosInputEnvelope
    connect?: instructoresWhereUniqueInput | instructoresWhereUniqueInput[]
  }

  export type inscripcionesUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<inscripcionesCreateWithoutUsuariosInput, inscripcionesUncheckedCreateWithoutUsuariosInput> | inscripcionesCreateWithoutUsuariosInput[] | inscripcionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: inscripcionesCreateOrConnectWithoutUsuariosInput | inscripcionesCreateOrConnectWithoutUsuariosInput[]
    upsert?: inscripcionesUpsertWithWhereUniqueWithoutUsuariosInput | inscripcionesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: inscripcionesCreateManyUsuariosInputEnvelope
    set?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    disconnect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    delete?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    connect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    update?: inscripcionesUpdateWithWhereUniqueWithoutUsuariosInput | inscripcionesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: inscripcionesUpdateManyWithWhereWithoutUsuariosInput | inscripcionesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: inscripcionesScalarWhereInput | inscripcionesScalarWhereInput[]
  }

  export type instructoresUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<instructoresCreateWithoutUsuariosInput, instructoresUncheckedCreateWithoutUsuariosInput> | instructoresCreateWithoutUsuariosInput[] | instructoresUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: instructoresCreateOrConnectWithoutUsuariosInput | instructoresCreateOrConnectWithoutUsuariosInput[]
    upsert?: instructoresUpsertWithWhereUniqueWithoutUsuariosInput | instructoresUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: instructoresCreateManyUsuariosInputEnvelope
    set?: instructoresWhereUniqueInput | instructoresWhereUniqueInput[]
    disconnect?: instructoresWhereUniqueInput | instructoresWhereUniqueInput[]
    delete?: instructoresWhereUniqueInput | instructoresWhereUniqueInput[]
    connect?: instructoresWhereUniqueInput | instructoresWhereUniqueInput[]
    update?: instructoresUpdateWithWhereUniqueWithoutUsuariosInput | instructoresUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: instructoresUpdateManyWithWhereWithoutUsuariosInput | instructoresUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: instructoresScalarWhereInput | instructoresScalarWhereInput[]
  }

  export type inscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<inscripcionesCreateWithoutUsuariosInput, inscripcionesUncheckedCreateWithoutUsuariosInput> | inscripcionesCreateWithoutUsuariosInput[] | inscripcionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: inscripcionesCreateOrConnectWithoutUsuariosInput | inscripcionesCreateOrConnectWithoutUsuariosInput[]
    upsert?: inscripcionesUpsertWithWhereUniqueWithoutUsuariosInput | inscripcionesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: inscripcionesCreateManyUsuariosInputEnvelope
    set?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    disconnect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    delete?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    connect?: inscripcionesWhereUniqueInput | inscripcionesWhereUniqueInput[]
    update?: inscripcionesUpdateWithWhereUniqueWithoutUsuariosInput | inscripcionesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: inscripcionesUpdateManyWithWhereWithoutUsuariosInput | inscripcionesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: inscripcionesScalarWhereInput | inscripcionesScalarWhereInput[]
  }

  export type instructoresUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<instructoresCreateWithoutUsuariosInput, instructoresUncheckedCreateWithoutUsuariosInput> | instructoresCreateWithoutUsuariosInput[] | instructoresUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: instructoresCreateOrConnectWithoutUsuariosInput | instructoresCreateOrConnectWithoutUsuariosInput[]
    upsert?: instructoresUpsertWithWhereUniqueWithoutUsuariosInput | instructoresUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: instructoresCreateManyUsuariosInputEnvelope
    set?: instructoresWhereUniqueInput | instructoresWhereUniqueInput[]
    disconnect?: instructoresWhereUniqueInput | instructoresWhereUniqueInput[]
    delete?: instructoresWhereUniqueInput | instructoresWhereUniqueInput[]
    connect?: instructoresWhereUniqueInput | instructoresWhereUniqueInput[]
    update?: instructoresUpdateWithWhereUniqueWithoutUsuariosInput | instructoresUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: instructoresUpdateManyWithWhereWithoutUsuariosInput | instructoresUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: instructoresScalarWhereInput | instructoresScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type cursosCreateWithoutCategoriasInput = {
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
    instructores?: instructoresCreateNestedOneWithoutCursosInput
    inscripciones?: inscripcionesCreateNestedManyWithoutCursosInput
    modulos?: modulosCreateNestedManyWithoutCursosInput
  }

  export type cursosUncheckedCreateWithoutCategoriasInput = {
    id?: number
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    instructor_id?: number | null
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
    inscripciones?: inscripcionesUncheckedCreateNestedManyWithoutCursosInput
    modulos?: modulosUncheckedCreateNestedManyWithoutCursosInput
  }

  export type cursosCreateOrConnectWithoutCategoriasInput = {
    where: cursosWhereUniqueInput
    create: XOR<cursosCreateWithoutCategoriasInput, cursosUncheckedCreateWithoutCategoriasInput>
  }

  export type cursosCreateManyCategoriasInputEnvelope = {
    data: cursosCreateManyCategoriasInput | cursosCreateManyCategoriasInput[]
    skipDuplicates?: boolean
  }

  export type cursosUpsertWithWhereUniqueWithoutCategoriasInput = {
    where: cursosWhereUniqueInput
    update: XOR<cursosUpdateWithoutCategoriasInput, cursosUncheckedUpdateWithoutCategoriasInput>
    create: XOR<cursosCreateWithoutCategoriasInput, cursosUncheckedCreateWithoutCategoriasInput>
  }

  export type cursosUpdateWithWhereUniqueWithoutCategoriasInput = {
    where: cursosWhereUniqueInput
    data: XOR<cursosUpdateWithoutCategoriasInput, cursosUncheckedUpdateWithoutCategoriasInput>
  }

  export type cursosUpdateManyWithWhereWithoutCategoriasInput = {
    where: cursosScalarWhereInput
    data: XOR<cursosUpdateManyMutationInput, cursosUncheckedUpdateManyWithoutCategoriasInput>
  }

  export type cursosScalarWhereInput = {
    AND?: cursosScalarWhereInput | cursosScalarWhereInput[]
    OR?: cursosScalarWhereInput[]
    NOT?: cursosScalarWhereInput | cursosScalarWhereInput[]
    id?: IntFilter<"cursos"> | number
    titulo?: StringFilter<"cursos"> | string
    descripcion?: StringNullableFilter<"cursos"> | string | null
    precio?: DecimalFilter<"cursos"> | Decimal | DecimalJsLike | number | string
    categoria_id?: IntNullableFilter<"cursos"> | number | null
    instructor_id?: IntNullableFilter<"cursos"> | number | null
    duracion_horas?: IntNullableFilter<"cursos"> | number | null
    nivel?: StringNullableFilter<"cursos"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"cursos"> | Date | string | null
    activo?: BoolNullableFilter<"cursos"> | boolean | null
    estado_auditoria?: StringNullableFilter<"cursos"> | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"cursos"> | Date | string | null
  }

  export type categoriasCreateWithoutCursosInput = {
    nombre: string
    descripcion?: string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type categoriasUncheckedCreateWithoutCursosInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type categoriasCreateOrConnectWithoutCursosInput = {
    where: categoriasWhereUniqueInput
    create: XOR<categoriasCreateWithoutCursosInput, categoriasUncheckedCreateWithoutCursosInput>
  }

  export type instructoresCreateWithoutCursosInput = {
    biografia?: string | null
    foto_url?: string | null
    especialidad?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    usuarios?: usuariosCreateNestedOneWithoutInstructoresInput
  }

  export type instructoresUncheckedCreateWithoutCursosInput = {
    id?: number
    usuario_id?: number | null
    biografia?: string | null
    foto_url?: string | null
    especialidad?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type instructoresCreateOrConnectWithoutCursosInput = {
    where: instructoresWhereUniqueInput
    create: XOR<instructoresCreateWithoutCursosInput, instructoresUncheckedCreateWithoutCursosInput>
  }

  export type inscripcionesCreateWithoutCursosInput = {
    fecha_inscripcion?: Date | string | null
    progreso?: Decimal | DecimalJsLike | number | string | null
    completado?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    usuarios?: usuariosCreateNestedOneWithoutInscripcionesInput
  }

  export type inscripcionesUncheckedCreateWithoutCursosInput = {
    id?: number
    usuario_id?: number | null
    fecha_inscripcion?: Date | string | null
    progreso?: Decimal | DecimalJsLike | number | string | null
    completado?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type inscripcionesCreateOrConnectWithoutCursosInput = {
    where: inscripcionesWhereUniqueInput
    create: XOR<inscripcionesCreateWithoutCursosInput, inscripcionesUncheckedCreateWithoutCursosInput>
  }

  export type inscripcionesCreateManyCursosInputEnvelope = {
    data: inscripcionesCreateManyCursosInput | inscripcionesCreateManyCursosInput[]
    skipDuplicates?: boolean
  }

  export type modulosCreateWithoutCursosInput = {
    titulo: string
    descripcion?: string | null
    orden: number
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type modulosUncheckedCreateWithoutCursosInput = {
    id?: number
    titulo: string
    descripcion?: string | null
    orden: number
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type modulosCreateOrConnectWithoutCursosInput = {
    where: modulosWhereUniqueInput
    create: XOR<modulosCreateWithoutCursosInput, modulosUncheckedCreateWithoutCursosInput>
  }

  export type modulosCreateManyCursosInputEnvelope = {
    data: modulosCreateManyCursosInput | modulosCreateManyCursosInput[]
    skipDuplicates?: boolean
  }

  export type categoriasUpsertWithoutCursosInput = {
    update: XOR<categoriasUpdateWithoutCursosInput, categoriasUncheckedUpdateWithoutCursosInput>
    create: XOR<categoriasCreateWithoutCursosInput, categoriasUncheckedCreateWithoutCursosInput>
    where?: categoriasWhereInput
  }

  export type categoriasUpdateToOneWithWhereWithoutCursosInput = {
    where?: categoriasWhereInput
    data: XOR<categoriasUpdateWithoutCursosInput, categoriasUncheckedUpdateWithoutCursosInput>
  }

  export type categoriasUpdateWithoutCursosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type categoriasUncheckedUpdateWithoutCursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instructoresUpsertWithoutCursosInput = {
    update: XOR<instructoresUpdateWithoutCursosInput, instructoresUncheckedUpdateWithoutCursosInput>
    create: XOR<instructoresCreateWithoutCursosInput, instructoresUncheckedCreateWithoutCursosInput>
    where?: instructoresWhereInput
  }

  export type instructoresUpdateToOneWithWhereWithoutCursosInput = {
    where?: instructoresWhereInput
    data: XOR<instructoresUpdateWithoutCursosInput, instructoresUncheckedUpdateWithoutCursosInput>
  }

  export type instructoresUpdateWithoutCursosInput = {
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    foto_url?: NullableStringFieldUpdateOperationsInput | string | null
    especialidad?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUpdateOneWithoutInstructoresNestedInput
  }

  export type instructoresUncheckedUpdateWithoutCursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    foto_url?: NullableStringFieldUpdateOperationsInput | string | null
    especialidad?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inscripcionesUpsertWithWhereUniqueWithoutCursosInput = {
    where: inscripcionesWhereUniqueInput
    update: XOR<inscripcionesUpdateWithoutCursosInput, inscripcionesUncheckedUpdateWithoutCursosInput>
    create: XOR<inscripcionesCreateWithoutCursosInput, inscripcionesUncheckedCreateWithoutCursosInput>
  }

  export type inscripcionesUpdateWithWhereUniqueWithoutCursosInput = {
    where: inscripcionesWhereUniqueInput
    data: XOR<inscripcionesUpdateWithoutCursosInput, inscripcionesUncheckedUpdateWithoutCursosInput>
  }

  export type inscripcionesUpdateManyWithWhereWithoutCursosInput = {
    where: inscripcionesScalarWhereInput
    data: XOR<inscripcionesUpdateManyMutationInput, inscripcionesUncheckedUpdateManyWithoutCursosInput>
  }

  export type inscripcionesScalarWhereInput = {
    AND?: inscripcionesScalarWhereInput | inscripcionesScalarWhereInput[]
    OR?: inscripcionesScalarWhereInput[]
    NOT?: inscripcionesScalarWhereInput | inscripcionesScalarWhereInput[]
    id?: IntFilter<"inscripciones"> | number
    usuario_id?: IntNullableFilter<"inscripciones"> | number | null
    curso_id?: IntNullableFilter<"inscripciones"> | number | null
    fecha_inscripcion?: DateTimeNullableFilter<"inscripciones"> | Date | string | null
    progreso?: DecimalNullableFilter<"inscripciones"> | Decimal | DecimalJsLike | number | string | null
    completado?: BoolNullableFilter<"inscripciones"> | boolean | null
    estado_auditoria?: StringNullableFilter<"inscripciones"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"inscripciones"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"inscripciones"> | Date | string | null
  }

  export type modulosUpsertWithWhereUniqueWithoutCursosInput = {
    where: modulosWhereUniqueInput
    update: XOR<modulosUpdateWithoutCursosInput, modulosUncheckedUpdateWithoutCursosInput>
    create: XOR<modulosCreateWithoutCursosInput, modulosUncheckedCreateWithoutCursosInput>
  }

  export type modulosUpdateWithWhereUniqueWithoutCursosInput = {
    where: modulosWhereUniqueInput
    data: XOR<modulosUpdateWithoutCursosInput, modulosUncheckedUpdateWithoutCursosInput>
  }

  export type modulosUpdateManyWithWhereWithoutCursosInput = {
    where: modulosScalarWhereInput
    data: XOR<modulosUpdateManyMutationInput, modulosUncheckedUpdateManyWithoutCursosInput>
  }

  export type modulosScalarWhereInput = {
    AND?: modulosScalarWhereInput | modulosScalarWhereInput[]
    OR?: modulosScalarWhereInput[]
    NOT?: modulosScalarWhereInput | modulosScalarWhereInput[]
    id?: IntFilter<"modulos"> | number
    curso_id?: IntNullableFilter<"modulos"> | number | null
    titulo?: StringFilter<"modulos"> | string
    descripcion?: StringNullableFilter<"modulos"> | string | null
    orden?: IntFilter<"modulos"> | number
    estado_auditoria?: StringNullableFilter<"modulos"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"modulos"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"modulos"> | Date | string | null
  }

  export type cursosCreateWithoutInscripcionesInput = {
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
    categorias?: categoriasCreateNestedOneWithoutCursosInput
    instructores?: instructoresCreateNestedOneWithoutCursosInput
    modulos?: modulosCreateNestedManyWithoutCursosInput
  }

  export type cursosUncheckedCreateWithoutInscripcionesInput = {
    id?: number
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    categoria_id?: number | null
    instructor_id?: number | null
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
    modulos?: modulosUncheckedCreateNestedManyWithoutCursosInput
  }

  export type cursosCreateOrConnectWithoutInscripcionesInput = {
    where: cursosWhereUniqueInput
    create: XOR<cursosCreateWithoutInscripcionesInput, cursosUncheckedCreateWithoutInscripcionesInput>
  }

  export type usuariosCreateWithoutInscripcionesInput = {
    nombre: string
    email: string
    password: string
    rol?: string | null
    fecha_registro?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    instructores?: instructoresCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutInscripcionesInput = {
    id?: number
    nombre: string
    email: string
    password: string
    rol?: string | null
    fecha_registro?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    instructores?: instructoresUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutInscripcionesInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutInscripcionesInput, usuariosUncheckedCreateWithoutInscripcionesInput>
  }

  export type cursosUpsertWithoutInscripcionesInput = {
    update: XOR<cursosUpdateWithoutInscripcionesInput, cursosUncheckedUpdateWithoutInscripcionesInput>
    create: XOR<cursosCreateWithoutInscripcionesInput, cursosUncheckedCreateWithoutInscripcionesInput>
    where?: cursosWhereInput
  }

  export type cursosUpdateToOneWithWhereWithoutInscripcionesInput = {
    where?: cursosWhereInput
    data: XOR<cursosUpdateWithoutInscripcionesInput, cursosUncheckedUpdateWithoutInscripcionesInput>
  }

  export type cursosUpdateWithoutInscripcionesInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categorias?: categoriasUpdateOneWithoutCursosNestedInput
    instructores?: instructoresUpdateOneWithoutCursosNestedInput
    modulos?: modulosUpdateManyWithoutCursosNestedInput
  }

  export type cursosUncheckedUpdateWithoutInscripcionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    categoria_id?: NullableIntFieldUpdateOperationsInput | number | null
    instructor_id?: NullableIntFieldUpdateOperationsInput | number | null
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modulos?: modulosUncheckedUpdateManyWithoutCursosNestedInput
  }

  export type usuariosUpsertWithoutInscripcionesInput = {
    update: XOR<usuariosUpdateWithoutInscripcionesInput, usuariosUncheckedUpdateWithoutInscripcionesInput>
    create: XOR<usuariosCreateWithoutInscripcionesInput, usuariosUncheckedCreateWithoutInscripcionesInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutInscripcionesInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutInscripcionesInput, usuariosUncheckedUpdateWithoutInscripcionesInput>
  }

  export type usuariosUpdateWithoutInscripcionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    instructores?: instructoresUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutInscripcionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    instructores?: instructoresUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type cursosCreateWithoutInstructoresInput = {
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
    categorias?: categoriasCreateNestedOneWithoutCursosInput
    inscripciones?: inscripcionesCreateNestedManyWithoutCursosInput
    modulos?: modulosCreateNestedManyWithoutCursosInput
  }

  export type cursosUncheckedCreateWithoutInstructoresInput = {
    id?: number
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    categoria_id?: number | null
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
    inscripciones?: inscripcionesUncheckedCreateNestedManyWithoutCursosInput
    modulos?: modulosUncheckedCreateNestedManyWithoutCursosInput
  }

  export type cursosCreateOrConnectWithoutInstructoresInput = {
    where: cursosWhereUniqueInput
    create: XOR<cursosCreateWithoutInstructoresInput, cursosUncheckedCreateWithoutInstructoresInput>
  }

  export type cursosCreateManyInstructoresInputEnvelope = {
    data: cursosCreateManyInstructoresInput | cursosCreateManyInstructoresInput[]
    skipDuplicates?: boolean
  }

  export type usuariosCreateWithoutInstructoresInput = {
    nombre: string
    email: string
    password: string
    rol?: string | null
    fecha_registro?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    inscripciones?: inscripcionesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutInstructoresInput = {
    id?: number
    nombre: string
    email: string
    password: string
    rol?: string | null
    fecha_registro?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    inscripciones?: inscripcionesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutInstructoresInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutInstructoresInput, usuariosUncheckedCreateWithoutInstructoresInput>
  }

  export type cursosUpsertWithWhereUniqueWithoutInstructoresInput = {
    where: cursosWhereUniqueInput
    update: XOR<cursosUpdateWithoutInstructoresInput, cursosUncheckedUpdateWithoutInstructoresInput>
    create: XOR<cursosCreateWithoutInstructoresInput, cursosUncheckedCreateWithoutInstructoresInput>
  }

  export type cursosUpdateWithWhereUniqueWithoutInstructoresInput = {
    where: cursosWhereUniqueInput
    data: XOR<cursosUpdateWithoutInstructoresInput, cursosUncheckedUpdateWithoutInstructoresInput>
  }

  export type cursosUpdateManyWithWhereWithoutInstructoresInput = {
    where: cursosScalarWhereInput
    data: XOR<cursosUpdateManyMutationInput, cursosUncheckedUpdateManyWithoutInstructoresInput>
  }

  export type usuariosUpsertWithoutInstructoresInput = {
    update: XOR<usuariosUpdateWithoutInstructoresInput, usuariosUncheckedUpdateWithoutInstructoresInput>
    create: XOR<usuariosCreateWithoutInstructoresInput, usuariosUncheckedCreateWithoutInstructoresInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutInstructoresInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutInstructoresInput, usuariosUncheckedUpdateWithoutInstructoresInput>
  }

  export type usuariosUpdateWithoutInstructoresInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inscripciones?: inscripcionesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutInstructoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inscripciones?: inscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type cursosCreateWithoutModulosInput = {
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
    categorias?: categoriasCreateNestedOneWithoutCursosInput
    instructores?: instructoresCreateNestedOneWithoutCursosInput
    inscripciones?: inscripcionesCreateNestedManyWithoutCursosInput
  }

  export type cursosUncheckedCreateWithoutModulosInput = {
    id?: number
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    categoria_id?: number | null
    instructor_id?: number | null
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
    inscripciones?: inscripcionesUncheckedCreateNestedManyWithoutCursosInput
  }

  export type cursosCreateOrConnectWithoutModulosInput = {
    where: cursosWhereUniqueInput
    create: XOR<cursosCreateWithoutModulosInput, cursosUncheckedCreateWithoutModulosInput>
  }

  export type cursosUpsertWithoutModulosInput = {
    update: XOR<cursosUpdateWithoutModulosInput, cursosUncheckedUpdateWithoutModulosInput>
    create: XOR<cursosCreateWithoutModulosInput, cursosUncheckedCreateWithoutModulosInput>
    where?: cursosWhereInput
  }

  export type cursosUpdateToOneWithWhereWithoutModulosInput = {
    where?: cursosWhereInput
    data: XOR<cursosUpdateWithoutModulosInput, cursosUncheckedUpdateWithoutModulosInput>
  }

  export type cursosUpdateWithoutModulosInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categorias?: categoriasUpdateOneWithoutCursosNestedInput
    instructores?: instructoresUpdateOneWithoutCursosNestedInput
    inscripciones?: inscripcionesUpdateManyWithoutCursosNestedInput
  }

  export type cursosUncheckedUpdateWithoutModulosInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    categoria_id?: NullableIntFieldUpdateOperationsInput | number | null
    instructor_id?: NullableIntFieldUpdateOperationsInput | number | null
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inscripciones?: inscripcionesUncheckedUpdateManyWithoutCursosNestedInput
  }

  export type inscripcionesCreateWithoutUsuariosInput = {
    fecha_inscripcion?: Date | string | null
    progreso?: Decimal | DecimalJsLike | number | string | null
    completado?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    cursos?: cursosCreateNestedOneWithoutInscripcionesInput
  }

  export type inscripcionesUncheckedCreateWithoutUsuariosInput = {
    id?: number
    curso_id?: number | null
    fecha_inscripcion?: Date | string | null
    progreso?: Decimal | DecimalJsLike | number | string | null
    completado?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type inscripcionesCreateOrConnectWithoutUsuariosInput = {
    where: inscripcionesWhereUniqueInput
    create: XOR<inscripcionesCreateWithoutUsuariosInput, inscripcionesUncheckedCreateWithoutUsuariosInput>
  }

  export type inscripcionesCreateManyUsuariosInputEnvelope = {
    data: inscripcionesCreateManyUsuariosInput | inscripcionesCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type instructoresCreateWithoutUsuariosInput = {
    biografia?: string | null
    foto_url?: string | null
    especialidad?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    cursos?: cursosCreateNestedManyWithoutInstructoresInput
  }

  export type instructoresUncheckedCreateWithoutUsuariosInput = {
    id?: number
    biografia?: string | null
    foto_url?: string | null
    especialidad?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
    cursos?: cursosUncheckedCreateNestedManyWithoutInstructoresInput
  }

  export type instructoresCreateOrConnectWithoutUsuariosInput = {
    where: instructoresWhereUniqueInput
    create: XOR<instructoresCreateWithoutUsuariosInput, instructoresUncheckedCreateWithoutUsuariosInput>
  }

  export type instructoresCreateManyUsuariosInputEnvelope = {
    data: instructoresCreateManyUsuariosInput | instructoresCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type inscripcionesUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: inscripcionesWhereUniqueInput
    update: XOR<inscripcionesUpdateWithoutUsuariosInput, inscripcionesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<inscripcionesCreateWithoutUsuariosInput, inscripcionesUncheckedCreateWithoutUsuariosInput>
  }

  export type inscripcionesUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: inscripcionesWhereUniqueInput
    data: XOR<inscripcionesUpdateWithoutUsuariosInput, inscripcionesUncheckedUpdateWithoutUsuariosInput>
  }

  export type inscripcionesUpdateManyWithWhereWithoutUsuariosInput = {
    where: inscripcionesScalarWhereInput
    data: XOR<inscripcionesUpdateManyMutationInput, inscripcionesUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type instructoresUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: instructoresWhereUniqueInput
    update: XOR<instructoresUpdateWithoutUsuariosInput, instructoresUncheckedUpdateWithoutUsuariosInput>
    create: XOR<instructoresCreateWithoutUsuariosInput, instructoresUncheckedCreateWithoutUsuariosInput>
  }

  export type instructoresUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: instructoresWhereUniqueInput
    data: XOR<instructoresUpdateWithoutUsuariosInput, instructoresUncheckedUpdateWithoutUsuariosInput>
  }

  export type instructoresUpdateManyWithWhereWithoutUsuariosInput = {
    where: instructoresScalarWhereInput
    data: XOR<instructoresUpdateManyMutationInput, instructoresUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type instructoresScalarWhereInput = {
    AND?: instructoresScalarWhereInput | instructoresScalarWhereInput[]
    OR?: instructoresScalarWhereInput[]
    NOT?: instructoresScalarWhereInput | instructoresScalarWhereInput[]
    id?: IntFilter<"instructores"> | number
    usuario_id?: IntNullableFilter<"instructores"> | number | null
    biografia?: StringNullableFilter<"instructores"> | string | null
    foto_url?: StringNullableFilter<"instructores"> | string | null
    especialidad?: StringNullableFilter<"instructores"> | string | null
    rating?: DecimalNullableFilter<"instructores"> | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: StringNullableFilter<"instructores"> | string | null
    fecha_creacion?: DateTimeNullableFilter<"instructores"> | Date | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"instructores"> | Date | string | null
  }

  export type cursosCreateManyCategoriasInput = {
    id?: number
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    instructor_id?: number | null
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
  }

  export type cursosUpdateWithoutCategoriasInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    instructores?: instructoresUpdateOneWithoutCursosNestedInput
    inscripciones?: inscripcionesUpdateManyWithoutCursosNestedInput
    modulos?: modulosUpdateManyWithoutCursosNestedInput
  }

  export type cursosUncheckedUpdateWithoutCategoriasInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    instructor_id?: NullableIntFieldUpdateOperationsInput | number | null
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inscripciones?: inscripcionesUncheckedUpdateManyWithoutCursosNestedInput
    modulos?: modulosUncheckedUpdateManyWithoutCursosNestedInput
  }

  export type cursosUncheckedUpdateManyWithoutCategoriasInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    instructor_id?: NullableIntFieldUpdateOperationsInput | number | null
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inscripcionesCreateManyCursosInput = {
    id?: number
    usuario_id?: number | null
    fecha_inscripcion?: Date | string | null
    progreso?: Decimal | DecimalJsLike | number | string | null
    completado?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type modulosCreateManyCursosInput = {
    id?: number
    titulo: string
    descripcion?: string | null
    orden: number
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type inscripcionesUpdateWithoutCursosInput = {
    fecha_inscripcion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    completado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUpdateOneWithoutInscripcionesNestedInput
  }

  export type inscripcionesUncheckedUpdateWithoutCursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    completado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inscripcionesUncheckedUpdateManyWithoutCursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    completado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type modulosUpdateWithoutCursosInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: IntFieldUpdateOperationsInput | number
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type modulosUncheckedUpdateWithoutCursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: IntFieldUpdateOperationsInput | number
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type modulosUncheckedUpdateManyWithoutCursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: IntFieldUpdateOperationsInput | number
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type cursosCreateManyInstructoresInput = {
    id?: number
    titulo: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    categoria_id?: number | null
    duracion_horas?: number | null
    nivel?: string | null
    fecha_creacion?: Date | string | null
    activo?: boolean | null
    estado_auditoria?: string | null
    fecha_actualizacion?: Date | string | null
  }

  export type cursosUpdateWithoutInstructoresInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categorias?: categoriasUpdateOneWithoutCursosNestedInput
    inscripciones?: inscripcionesUpdateManyWithoutCursosNestedInput
    modulos?: modulosUpdateManyWithoutCursosNestedInput
  }

  export type cursosUncheckedUpdateWithoutInstructoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    categoria_id?: NullableIntFieldUpdateOperationsInput | number | null
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inscripciones?: inscripcionesUncheckedUpdateManyWithoutCursosNestedInput
    modulos?: modulosUncheckedUpdateManyWithoutCursosNestedInput
  }

  export type cursosUncheckedUpdateManyWithoutInstructoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    categoria_id?: NullableIntFieldUpdateOperationsInput | number | null
    duracion_horas?: NullableIntFieldUpdateOperationsInput | number | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inscripcionesCreateManyUsuariosInput = {
    id?: number
    curso_id?: number | null
    fecha_inscripcion?: Date | string | null
    progreso?: Decimal | DecimalJsLike | number | string | null
    completado?: boolean | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type instructoresCreateManyUsuariosInput = {
    id?: number
    biografia?: string | null
    foto_url?: string | null
    especialidad?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: string | null
    fecha_creacion?: Date | string | null
    fecha_actualizacion?: Date | string | null
  }

  export type inscripcionesUpdateWithoutUsuariosInput = {
    fecha_inscripcion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    completado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cursos?: cursosUpdateOneWithoutInscripcionesNestedInput
  }

  export type inscripcionesUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    curso_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    completado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inscripcionesUncheckedUpdateManyWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    curso_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    completado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instructoresUpdateWithoutUsuariosInput = {
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    foto_url?: NullableStringFieldUpdateOperationsInput | string | null
    especialidad?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cursos?: cursosUpdateManyWithoutInstructoresNestedInput
  }

  export type instructoresUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    foto_url?: NullableStringFieldUpdateOperationsInput | string | null
    especialidad?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cursos?: cursosUncheckedUpdateManyWithoutInstructoresNestedInput
  }

  export type instructoresUncheckedUpdateManyWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    foto_url?: NullableStringFieldUpdateOperationsInput | string | null
    especialidad?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    estado_auditoria?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}